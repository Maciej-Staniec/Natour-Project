// ========= Closed State ========= //

// Popup background styling
.popup {
  position: fixed;
  top: 0;
  left: 0;
  // Occupy the whole view of the page
  height: 100vh;
  width: 100%;
  z-index: 3000;
  background-color: rgba(0, 0, 0, 0.8);

  // The @supports query checks if the browser supports either -webkit-backdrop-filter or backdrop-filter.
  // If either of these properties is supported, the styles inside the @supports block will be applied.
  @supports (-webkit-backdrop-filter: blur(5px)) or (backdrop-filter: blur(5px)) {
    // Inside the @supports block, both the prefixed and standard versions of backdrop-filter are included. This ensures compatibility with browsers that support either version.

    // Optional - For better browser support
    -webkit-backdrop-filter: blur(5px);
    // Blurring background
    backdrop-filter: blur(5px);
    background-color: rgba(0, 0, 0, 0.4);
  }
  // Set to hidden, when the popup is closed
  visibility: hidden;
  opacity: 0;
  transition: all 0.3s;

  // Main content window styling
  &__content {
    border-radius: 3px;
    background-color: $color-white;
    @include absolute_positioning_center;
    width: 75%;
    display: table;
    // Hide corners of the image when border-radius is applied
    overflow: hidden;
    opacity: 0;
    // Scale set to a lower value to make the element look like it emerges towards the user when the popup is opened.
    transform: translate(-50%, -50%) scale(0);
    // Delay set to allow black background to emerge first.
    transition: all 0.5s 0.2s;

    // width < 700px
    @include respond-to(tab-port-sm) {
      width: 90%;
    }
    // Styling the left-side width of the popup content
    &-left {
      display: table-cell;
      width: calc(100% / 3);

      @include respond-to(popup) {
        display: none;
      }
    }
    // Styling the right-side width of the popup content
    &-right {
      display: table-cell;
      width: calc((100% / 3) * 2);
      vertical-align: middle;
      padding: 2.4rem 4rem;
    }
    @include respond-to(popup) {
      background-image: linear-gradient(
          105deg,
          rgba($color-white, 0.9) 0% 100%,
          transparent 100%
        ),
        url(../../img/nat-1-large.jpg);
    }
  }

  &__img {
    width: 100%;
    display: block;

    &:not(:last-child) {
      margin-bottom: 0.8rem;
    }
  }

  &__text {
    font-size: 1.4rem;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid $color-grey-light-2;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
    text-align: justify;

    // width < 900px
    @include respond-to(tab-port-big) {
      column-count: 1;
      hyphens: none;
    }
  }

  // CTA button styling
  &__button {
    text-align: center;
  }

  // ========= Opened state ========= //

  // Making the popup visible by using the :target pseudo class.
  // It targets an HTML ID. When an anchor element targeting a specific ID is clicked, it targets the ID and applies all declared styling to the targeted element (including its children if there are any).

  &:target {
    visibility: visible;
    opacity: 1;
  }

  // Animation of the popup content (resizing the element)
  &:target &__content {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }

  // Styling of the close button
  &__close {
    position: fixed;
    top: 2.4rem;
    right: 2.4rem;
    width: 2.4rem;
    height: 2.4rem;
    border-radius: 50%;
    transition: all 0.2s;
    &-btn:link,
    &-btn:visited {
      line-height: 0;
      color: $color-grey-dark;
      @include absolute_positioning_center;
      display: inline-block;
      font-size: 3rem;
      @include respond-to(tab-port-big) {
        font-size: 4.4rem;
      }
      text-decoration: none;
      &:hover,
      &:active {
        color: $color-white;
      }

      // width < 900px
      @include respond-to(tab-port-big) {
      }
    }

    &:hover {
      background-color: $color-primary;
      transform: translateY(-1px);
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
    }
    &:active {
      transform: translateY(1px);
      box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.5);
    }
  }
}
