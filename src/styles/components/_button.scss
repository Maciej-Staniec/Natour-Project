.btn {
  &:link,
  &:visited {
    font-size: $default-font-size;
    padding: 1.6rem 4rem;
    text-decoration: none;
    border: none;
    /* cursor: pointer; */
    border-radius: 10rem;
    text-transform: uppercase;
    display: inline-block;
    transition: all 0.2s ease;
    position: relative;
  }
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    /* We want to see the advanced animation only if we hover over the button */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &::after {
    content: "";
    /* We want the pseudo element look exactly the same as the button. Therefore, we want to specify its properties like height and width to be the same. Therefore, we need to set their values to 100% (100% of the parent element). It works, because pseudo element is treated like a child element of the parent element (button).*/
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    /* We also want to specify the colour of the pseudo element to be white, but this needs to be applied to .btn--white class. */
    &::after {
      background-color: $color-white;
    }
  }
  &--green {
    background-color: $color-primary;
    color: $color-white;
    /* We also want to specify the colour of the pseudo element to be green, but this needs to be applied to .btn--green class. */
    &::after {
      background-color: $color-primary;
    }
  }

  &--animated {
    animation: MoveInButton 0.5s ease-out 0.75s;
    /* animation fill mode set to backwards applies the 0% animation declaration to our button before the animation happens. Therefore, we don't have to explicitly apply these styles to the button which prevents confusion. */
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    text-decoration: none;
    color: $color-primary;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    display: inline-block;
  }
  &:hover {
    background-color: $color-primary;
    color: $color-white;
    transform: translateY(-3px);
    transition: all 0.2s ease;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
  }
  &:active {
    transform: translateY(0px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
  }
}
