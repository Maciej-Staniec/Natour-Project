@import "abstracts/functions";
@import "abstracts/mixins";
@import "abstracts/variables";

@import "base/base";
@import "base/animations";
@import "base/typography";
@import "base/utilities";

@import "components/button";

@import "pages/home";

.header {
  /* This property sets the height of the HTML element to 95% of the current viewport. Monitors vary in size, so this property resizes the elements based on the maximum height of the view port. */
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../../img/hero.jpg);
  /* Set the image to cover the whole width of the viewport */
  background-size: cover;
  /* Setting up the image position to top makes it stay at the the middle part of the screen when we use a device with a different viewport size.*/
  background-position: top;
  /* syntax: (x y(first point), x y (2nd point), x y (3rd point), x y (4th point) */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* clip-path: polygon(0% 100%, 50% 0, 100% 100%); */
  position: relative;

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }
  &__logo {
    /* We don't need to specify the width property. Browsers will figure it out. */
    height: 3.5rem;
    backface-visibility: hidden;
    /* Apply animation on hover */
    &:hover {
      animation: enlarge 1s ease-in-out;
    }
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* Anchor tags - "a" elements are treated as text. Therefore, setting the text-align property works for them. */
    text-align: center;
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  /* To stop web browsers from moving the html element to the top at the end of the animation (shaking issue) we need to use the backface-visibility property and set its value to hidden*/
  backface-visibility: hidden;
  margin-bottom: 6.4rem;

  &--main {
    display: block;
    font-size: 6.2rem;
    letter-spacing: 3.6rem;
    font-weight: 400;

    animation-name: MoveInLeft;
    animation-duration: 1s;
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */
    animation-timing-function: ease-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    letter-spacing: 1.75rem;
    font-weight: 700;

    /* Let's use a CSS property, which contain all the necessary animation properties to shorten our code. */
    animation: MoveInRight 1s ease-out;
  }
}
