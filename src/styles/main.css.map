{"version":3,"sources":["main.css","abstracts\\_mixins.scss","abstracts\\_variables.scss","base\\_base.scss","base\\_animations.scss","base\\_typography.scss","base\\_utilities.scss","components\\_button.scss","components\\_composition.scss","components\\_feature-box.scss","components\\_card.scss","components\\_story.scss","components\\_bg-video.scss","components\\_form.scss","components\\_popup.scss","pages\\_home.scss","layout\\_header.scss","layout\\_grid.scss","layout\\_footer.scss","layout\\_navigation.scss"],"names":[],"mappings":"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o8BF;AACF;AC37BE;Ec/MF;IAkDI,oIAAA;IdoKA;;;;;KAAA;ED87BF;AACF;ACniCI;EclHJ;IA4DI,gBblCuB;EF+nCzB;AACF;AC5jCI;Ec9FJ;IAiEI,uBbjCuB;EF8nCzB;AACF;AC7kCI;EclFJ;IAsEI,oBbhCoB;EF6nCtB;AACF;;Ae1lCA;EACE,yBbjFmB;EakFnB,4BbrDuB;EasDvB,iBAAA;Af6lCF;ACxjCI;EcxCJ;IAOI,0BbrD8B;EFkpChC;AACF;ACjlCI;EcpBJ;IAYI,qCbpD6B;EFipC/B;AACF;AClmCI;EcRJ;IAiBI,qCbpD2B;EFipC7B;AACF;;Ae1lCA;EACE,kBb1EsB;Ea2EtB,kBAAA;Af6lCF;AC5kCI;EcnBJ;IAMI,kBbxE0B;EFqqC5B;AACF;ACrmCI;EcCJ;IAWI,sBbzE0B;EFsqC5B;AACF;ACtnCI;EcaJ;IAgBI,oBbzEoB;EFsqCtB;AACF;;AezlCA;EACE,oEAAA;EAKA,kBbrGuB;AF6rCzB;AChmCI;EcEJ;IAUI,kBbjG0B;EFyrC5B;AACF;ACznCI;EcsBJ;IAeI,sBblG0B;EF0rC5B;AACF;AC1oCI;EckCJ;IAoBI,aAAA;EfwlCF;AACF;ACrpCI;EcwCJ;IAyBI,eAAA;EfwlCF;AACF;AChqCI;Ec8CJ;IA6BI,sBAAA;EfylCF;AACF;;AerlCA;EACE,2HAAA;EAMA,sBAAA;EACA,kBb/IU;EagJV,6CAAA;AfmlCF;ACtkCE;EctBF;IAYI,2HAAA;IdiBA;;;;;KAAA;EDykCF;AACF;AC/jCE;EcxCF;IAsBI,2HAAA;IdyBA;;;;;KAAA;EDkkCF;AACF;ACzjCE;EczDF;IA+BI,2HAAA;IdiCA;;;;;KAAA;ED4jCF;AACF;ACvmCE;EctBF;IA2CM,2HAAA;IddF;;;;;KAAA;ED0mCF;AACF;AChmCE;EcxCF;IAoDM,2HAAA;IdLF;;;;;KAAA;EDmmCF;AACF;AC1lCE;EczDF;IA6DM,2HAAA;IdGF;;;;;KAAA;ED6lCF;AACF;ACluCI;EcoEJ;IAwEI,6FAAA;Ef0lCF;AACF;AeplCE;EACE,UAAA;EACA,eAAA;AfslCJ;AC/tCI;EcuIF;IAMI,aAAA;IACA,UAAA;EfslCJ;AACF;AC3uCI;Ec6IF;IAYI,eAAA;EfslCJ;AACF;ACtvCI;EcmJF;IAiBI,WAAA;IACA,eAAA;EfslCJ;AACF;AClwCI;EcyJF;IAuBI,WAAA;IACA,eAAA;EfslCJ;AACF;;AgBz2CA;EAEE,YAAA;EAEA,mIAAA;EAOA,sBAAA;EAEA,wBAAA;EAaA,6BAAA;EASA,6BAAA;EAUA,6BAAA;AhBs0CF;AgB/1CE;EApBF;IAqBI,YAAA;IACA,yDAAA;IACA,iDAAA;EhBk2CF;AACF;ACzrCE;EejMF;IA4BI,mIAAA;If4KA;;;;;KAAA;ED4rCF;AACF;AClrCE;EenNF;IAqCI,mIAAA;IfqLA;;;;;KAAA;EDqrCF;AACF;AC5qCE;EepOF;IA+CI,mIAAA;If4LA;;;;;KAAA;ED+qCF;AACF;AC9wCI;Ee7IJ;IAyDI,yDAAA;IACA,iDAAA;EhBs2CF;AACF;AgBp2CE;EACE,kBAAA;EACA,SAAA;EACA,UAAA;AhBs2CJ;AC7yCI;Ee5DF;IAOI,WAAA;IACA,YAAA;EhBs2CJ;AACF;ACr0CI;Ee1CF;IAcI,SAAA;IACA,UAAA;EhBq2CJ;AACF;AgBn2CE;EAEE,YAAA;EACA,2BAAA;AhBo2CJ;AgBl2CI;EACE,iCAAA;AhBo2CN;ACl1CI;EexBF;IAWI,cAAA;EhBm2CJ;AACF;AgBh2CE;EACE,kBAAA;EACA,QAAA;EACA,SAAA;EACA,gCAAA;EAEA,kBAAA;AhBi2CJ;;AiBr8CA;EACE,iBf4BW;Ee3BX,cAAA;AjBw8CF;AiBr8CE;EACE,mBfwBc;AF+6ClB;AC58CE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AD88CJ;AC/1CI;EgBnHJ;IAWI,cAAA;EjB28CF;AACF;;AiBv8CA;EACE,WAAA;AjB08CF;AiBx8CE;EACE,oBfWoB;AF+7CxB;ACv1CI;EgBpHF;IAKI,oBfQqB;EFk8CzB;AACF;ACn2CI;EgB7GF;IASI,oBfKoB;EFs8CxB;AACF;ACr3CI;EgBhGF;IAaI,eAAA;IACA,qBAAA;EjB48CJ;AACF;AC33CI;EgBnGJ;IAsBI,sBAAA;EjB48CF;AACF;;AiBz8CA;EhB/BI,gCAAA;AD4+CJ;ACh3CI;EgB7FJ;IhB/BI,gCAAA;EDg/CF;AACF;AC53CI;EgBtFJ;IAUI,WAAA;EjB48CF;AACF;;AiBz8CA;EhB1CI,iCAAA;ADu/CJ;AC93CI;EgB/EJ;IhB1CI,gCAAA;ED2/CF;AACF;AC14CI;EgBxEJ;IhB1CI,gCAAA;EDggDF;AACF;;AiB38CA;EhBnDI,iCAAA;ADkgDJ;AC54CI;EgBnEJ;IhBnDI,gCAAA;EDsgDF;AACF;ACx5CI;EgB5DJ;IhBnDI,gCAAA;ED2gDF;AACF;;AiB58CA;EhB7DI,8CAAA;AD6gDJ;AC15CI;EgBtDJ;IhB7DI,6CAAA;EDihDF;AACF;ACt6CI;EgB/CJ;IhB7DI,6CAAA;EDshDF;AACF;;AiB58CA;EhBtEI,8CAAA;ADshDJ;ACx6CI;EgBxCJ;IhBtEI,6CAAA;ED0hDF;AACF;ACp7CI;EgBjCJ;IhBtEI,6CAAA;ED+hDF;AACF;;AiB78CA;EhB9EI,+CAAA;AD+hDJ;ACt7CI;EgB3BJ;IhB9EI,6CAAA;EDmiDF;AACF;ACl8CI;EgBpBJ;IhB9EI,6CAAA;EDwiDF;AACF;;AkBvkDA;EACE,yBAAA;EACA,kBhByCsB;EgBxCtB,chBYmB;EgBXnB,iBAAA;AlB0kDF;AC98CI;EiBhIJ;IAOI,kBhB2C0B;EFgiD5B;AACF;ACh+CI;EiBnHJ;IAWI,sBhB2C0B;EFiiD5B;AACF;ACj/CI;EiBvGJ;IAgBI,oBhB2CoB;EFiiDtB;AACF;;AkBxkDE;EACE,YAAA;EACA,YAAA;AlB2kDJ;AkBzkDI;EACE,kBAAA;EACA,qBAAA;AlB2kDN;ACn/CI;EiB1FA;IAKI,qBAAA;ElB4kDN;AACF;AkBzkDE;EAEE,qBAAA;EACA,YAAA;EACA,mBAAA;EACA,0BAAA;AlB0kDJ;ACj/CI;EiB9FF;IAOI,WAAA;ElB4kDJ;AACF;AkBzkDE;EACE,kBAAA;AlB2kDJ;ACz/CI;EiBnFF;IAII,qBAAA;ElB4kDJ;AACF;AkBtkDE;EACE,YAAA;AlBwkDJ;ACjgDI;EiBxEF;IAII,WAAA;ElBykDJ;AACF;AkBtkDE;EACE,gBAAA;AlBwkDJ;AkBtkDE;EACE,qBAAA;AlBwkDJ;AkBvkDI;EACE,oBAAA;AlBykDN;AkBpkDI;EAGE,qBAAA;EACA,yBAAA;EACA,qBAAA;EACA,chBlEe;EgBmEf,oBAAA;AlBokDN;AkBlkDM;EAEE,chBpFQ;EgBqFR,kCAAA;EACA,qDAAA;EACA,yBhBrEY;AFwoDpB;;AmB1pDE;EACE,aAAA;EACA,wBAAA;KAAA,qBAAA;UAAA,gBAAA;AnB6pDJ;AmBzpDE;EACE,kBAAA;EAEA,QAAA;AnB0pDJ;AmBzpDI;EAIE,qBAAA;EACA,aAAA;EACA,aAAA;EACA,yBjBCc;AFupDpB;AmBtpDI;EAEE,WAAA;EACA,kBAAA;EACA,oBAAA;EACA,OAAA;AnBupDN;AmBrpDI;EAEE,YAAA;AnBspDN;AmBppDI;EACE,WAAA;AnBspDN;AmBhpDI;EACE,0CAAA;AnBkpDN;AmBhpDI;EACE,yCAAA;AnBkpDN;AmB7oDE;EACE,6BAAA;AnB+oDJ;AmB9oDI;EACE,MAAA;EACA,yBAAA;AnBgpDN;AmB9oDI;EACE,MAAA;EACA,0BAAA;AnBgpDN;AmB3oDE;EAEE,qBAAA;EACA,kBAAA;EACA,eAAA;AnB4oDJ;AmBxoDE;EACE,aAAA;EACA,cAAA;EACA,WAAA;EACA,aAAA;EACA,sBjBrDU;EiBsDV,YAAA;EACA,kBAAA;ElBhCF,4CAAA;EkBkCE,oBAAA;AnB0oDJ;AmBvoDI;EACE,eAAA;ElBnCJ,0CAAA;AD6qDF;AmBvoDI;ElBnCF,6CAAA;EkBqCI,6BAAA;AnByoDN;ACznDI;EkBlCF;IAuBI,WAAA;IACA,aAAA;EnBwoDJ;AACF;AmBpoDE;EACE,aAAA;EACA,cAAA;EACA,WAAA;EACA,aAAA;EACA,YAAA;EACA,mDAAA;EAIA,mDAAA;AnBmoDJ;ACxoDI;EkBLF;IAcI,WAAA;IACA,aAAA;EnBmoDJ;AACF;AmB/nDE;EACE,oBAAA;AnBioDJ;AmB7nDE;EACE,aAAA;EAEA,SAAA;EACA,eAAA;EACA,OAAA;EACA,QAAA;EACA,YAAA;EACA,UAAA;EACA,kBAAA;EACA,2DAAA;AnB8nDJ;AmBznDE;EACE,WAAA;EACA,UAAA;EACA,mBAAA;AnB2nDJ;AmBvnDE;ElB5GA,kBAAA;EACA,QAAA;EACA,SAAA;EACA,gCAAA;EkB2GE,kBAAA;EACA,WAAA;AnB4nDJ;AmBxnDE;EACE,cAAA;EACA,gBAAA;EACA,cAAA;AnB0nDJ;AmBtnDE;EAGE,iBAAA;EACA,gBAAA;EACA,WjB/IU;EiBgJV,qBAAA;EACA,yBAAA;EACA,qBAAA;EACA,sBAAA;EAEA,2EAAA;EAKA,oBAAA;EAEA,qBAAA;AnBgnDJ;AmB9mDI;EACE,oBAAA;AnBgnDN;AmB7mDI;EAGE,yBAAA;EACA,cjBzLU;EiB0LV,6BAAA;AnB6mDN;ACxsDI;EkB8DF;IAkCI,eAAA;EnB4mDJ;AACF","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n/*\n======== MEDIA QUERY MANAGER ========\n\n0 - 600 (37.5em):         Phone\n600 - 900 (56.25em):      Tablet portrait\n900 - 1200 (75em):     Tablet landscape\n1200 - 1800 (112.5em):    Normal style\n1800+ :                   Big desktop\n*/\n/*\n======== BREAKPOINT ARGUMENTS ========\n- phone\n- tab-port\n- tab-land\n- normal-dt\n  a) normal-dt-s\n  b) normal-dt-m\n  c) normal-dt-b\n- big-dt\n\nThe ORDER of styling our webpage with media queries: \n1. Base + typography\n2. General layout + grid\n3. Page layout\n4. Components\n\n*/\n/*\n  CSS media query syntax for background image explanation:\n\n  \"@media\"\n    The @media rule is used in CSS to apply styles based on specific conditions, such as the type of device, screen size, or resolution. It allows you to create responsive designs that adapt to different environments.\n\n  \"only screen\"\n    only: This keyword is used to apply the media query to specific media types and to hide styles from older browsers that do not support media queries. It’s optional but can improve compatibility.\n\n    screen: This keyword specifies that the styles should be applied to screen devices (monitors, tablets, smartphones). Other values could be \"print\" for print media or \"all\" for all media types.\n\n  \"and\"\n    The and keyword is used to combine multiple conditions in a media query. All conditions must be true for the styles to be applied.\n\n  \"(max-width: 1000px)\"\n    This condition applies the styles if the viewport width is less than or equal to 1000 pixels. It targets devices with smaller screens, such as tablets and smartphones.\n\n  \"(min-resolution: 96dpi)\"\n    This condition applies the styles if the device has a resolution of at least 96 dots per inch (dpi). This is a standard resolution for many devices.\n\n  \",\" (Comma)\n    The comma acts as an \"or\" operator, meaning that if any of the combined conditions (each set of conditions separated by commas) are true, the styles within the media query will be applied.\n  */\n/*\n  Screen resolutions:\n  DPR 1.0 = 96 dpi (standard displays)\n  DPR 2.0 = 192 dpi (2x Retina displays)\n  DPR 3.0 = 288 dpi (3x Retina displays)\n  */\n/* Load a 1000px wide image */\n/* Load a 1500px wide image */\n/* Load a 2000px wide image */\n/* ************* DESKTOP *************** */\n/* ************* TABLET LANDSCAPE *************** */\n/* ************* TABLET PORTRAIT *************** */\n/* ************* PHONE *************** */\n/* A cross-browser reset, often referred to as a CSS reset or a CSS normalization, is a technique used to reset or normalize default browser styling to create a consistent starting point for styling elements across different web browsers.\n\nDifferent browsers have their default styles for various HTML elements. This can lead to inconsistencies in appearance and layout between browsers. A CSS reset aims to neutralize these default styles, removing browser-specific styling differences, and providing a consistent baseline styling for your webpage across different browsers. */\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nhtml {\n  font-size: 10px;\n  font-size: 62.5%;\n}\n@media only screen and (min-width: 112.5em) {\n  html {\n    font-size: 75%;\n  }\n}\n@media only screen and (max-width: 75em) {\n  html {\n    font-size: 56.25%;\n  }\n}\n\nbody {\n  padding: 3rem;\n  box-sizing: border-box;\n}\n@media only screen and (max-width: 56.25em) {\n  body {\n    padding: 0;\n  }\n}\n\n::selection {\n  background-color: #55c57a;\n  color: #fff;\n}\n\n@keyframes MoveInLeft {\n  0% {\n    opacity: 0;\n    transform: translateX(-10rem);\n  }\n  80% {\n    transform: translateX(1rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n@keyframes MoveInRight {\n  0% {\n    opacity: 0;\n    transform: translateX(10rem);\n  }\n  /* 60% {\n    transform:rotate(-20deg)\n  } */\n  80% {\n    transform: translateX(-1rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n@keyframes enlarge {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes MoveInButton {\n  0% {\n    opacity: 0;\n    transform: translateY(10rem);\n  }\n  100% {\n    opacity: 1;\n  }\n}\nbody {\n  font-family: \"Lato\", sans-serif;\n  font-weight: 400;\n  line-height: 1.7;\n  color: #777;\n}\n\n.heading-primary {\n  color: #fff;\n  text-transform: uppercase;\n  backface-visibility: hidden;\n  margin-bottom: 6.4rem;\n}\n.heading-primary--main {\n  display: block;\n  font-size: 6.2rem;\n  letter-spacing: 3.6rem;\n  font-weight: 400;\n  animation-name: MoveInLeft;\n  animation-duration: 1s;\n  animation-timing-function: ease-out;\n}\n@media only screen and (max-width: 37.5em) {\n  .heading-primary--main {\n    font-size: 5.2rem;\n    letter-spacing: 1.75rem;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .heading-primary--main {\n    font-size: 4.4rem;\n    letter-spacing: 1.5rem;\n  }\n}\n.heading-primary--sub {\n  display: block;\n  font-size: 2rem;\n  letter-spacing: 1.75rem;\n  font-weight: 700;\n  animation: MoveInRight 1s ease-out;\n}\n@media only screen and (max-width: 37.5em) {\n  .heading-primary--sub {\n    font-size: 1.8rem;\n    letter-spacing: 1rem;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .heading-primary--sub {\n    font-size: 1.6rem;\n    letter-spacing: 0.75rem;\n  }\n}\n\n.heading-secondary {\n  display: inline-block;\n  font-size: 3.6rem;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-image: linear-gradient(to right, #7ed56f, #28b485);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  letter-spacing: 0.2rem;\n  transition: all 0.2s;\n}\n@media only screen and (max-width: 56.25em) {\n  .heading-secondary {\n    font-size: 3rem;\n    letter-spacing: 0.1rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .heading-secondary {\n    font-size: 2.4rem;\n    letter-spacing: 0;\n  }\n}\n.heading-secondary:hover {\n  transform: skew(15deg, 2deg) scale(1.1);\n  text-shadow: 0.5rem 1rem 1rem rgba(0, 0, 0, 0.3);\n}\n\n.heading-tertiary {\n  font-size: 1.6rem;\n  text-transform: uppercase;\n  font-weight: 700;\n}\n\n.paragraph {\n  font-size: 1.6rem;\n  margin-bottom: 3rem;\n}\n\n.u-center-text {\n  text-align: center !important;\n}\n\n.u-margin-bottom-small {\n  margin-bottom: 1.6rem !important;\n}\n\n.u-margin-bottom-medium {\n  margin-bottom: 4.8rem !important;\n}\n@media only screen and (max-width: 50em) {\n  .u-margin-bottom-medium {\n    margin-bottom: 2.4rem !important;\n  }\n}\n\n.u-margin-bottom-big {\n  margin-bottom: 8rem !important;\n}\n\n.u-margin-bottom-extrabig {\n  margin-bottom: 9.6rem !important;\n}\n\n@media only screen and (max-width: 50em) {\n  .u-mediaquery-about {\n    max-width: 80% !important;\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .u-mediaquery-composition {\n    margin-bottom: 8rem;\n  }\n  .u-mediaquery-composition:not(:last-child) {\n    margin-bottom: 8rem !important;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .u-mediaquery-composition:not(:last-child) {\n    margin-bottom: 11.2rem !important;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .u-mediaquery-book {\n    max-width: 100% !important;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .u-mediaquery-story {\n    max-width: 85% !important;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .u-mediaquery-story {\n    max-width: 90% !important;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .u-mediaquery-featurebox {\n    max-width: 80% !important;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .u-mediaquery-card {\n    max-width: 80% !important;\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .u-mediaquery-footer {\n    max-width: 80% !important;\n  }\n}\n@media only screen and (max-width: 90.5625em) {\n  .u-mediaquery__popup-center {\n    text-align: center;\n    display: block;\n  }\n}\n@media only screen and (max-width: 56.25em) {\n  .u-mediaquery__popup-center {\n    text-align: start;\n  }\n}\n\n.btn, .btn:link, .btn:visited {\n  font-size: 1.6rem;\n  padding: 1.6rem 4rem;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 10rem;\n  text-transform: uppercase;\n  display: inline-block;\n  transition: all 0.2s ease;\n  position: relative;\n}\n.btn:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\n  /* We want to see the advanced animation only if we hover over the button */\n}\n.btn:hover::after {\n  transform: scaleX(1.4) scaleY(1.6);\n  opacity: 0;\n}\n.btn:active {\n  transform: translateY(-1px);\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);\n}\n.btn::after {\n  content: \"\";\n  /* We want the pseudo element look exactly the same as the button. Therefore, we want to specify its properties like height and width to be the same. Therefore, we need to set their values to 100% (100% of the parent element). It works, because pseudo element is treated like a child element of the parent element (button).*/\n  display: inline-block;\n  height: 100%;\n  width: 100%;\n  border-radius: 10rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  transition: all 0.4s;\n}\n.btn--white {\n  background-color: #fff;\n  color: #777;\n  /* We also want to specify the colour of the pseudo element to be white, but this needs to be applied to .btn--white class. */\n}\n.btn--white::after {\n  background-color: #fff;\n}\n.btn--green {\n  background-color: #55c57a;\n  color: #fff;\n  /* We also want to specify the colour of the pseudo element to be green, but this needs to be applied to .btn--green class. */\n}\n.btn--green::after {\n  background-color: #55c57a;\n}\n.btn--animated {\n  animation: MoveInButton 0.5s ease-out 0.75s;\n  /* animation fill mode set to backwards applies the 0% animation declaration to our button before the animation happens. Therefore, we don't have to explicitly apply these styles to the button which prevents confusion. */\n  animation-fill-mode: backwards;\n}\n\n.btn-text:link, .btn-text:visited {\n  font-size: 1.6rem;\n  text-decoration: none;\n  color: #55c57a;\n  border-bottom: 1px solid #55c57a;\n  padding: 3px;\n  display: inline-block;\n}\n.btn-text:hover {\n  background-color: #55c57a;\n  color: #fff;\n  transform: translateY(-3px);\n  transition: all 0.2s ease;\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);\n}\n.btn-text:active {\n  transform: translateY(0px);\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n}\n\n.composition {\n  position: relative;\n}\n@media only screen and (max-width: 56.25em) {\n  .composition {\n    margin: 0 auto;\n    width: 90%;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .composition {\n    margin: 0;\n    width: 100%;\n  }\n}\n.composition__photo {\n  width: 55%;\n  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.4);\n  border-radius: 3px;\n  position: absolute;\n  transition: all 0.2s;\n  z-index: 10;\n}\n@media only screen and (max-width: 62.5em) {\n  .composition__photo {\n    float: left;\n    position: relative;\n    display: inline-block;\n    width: 33.3333333333%;\n    height: auto;\n    vertical-align: top;\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition__photo {\n    width: 40%;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .composition__photo {\n    width: 65%;\n  }\n}\n.composition__photo--p1 {\n  top: -2rem;\n  left: 0;\n}\n@media only screen and (max-width: 62.5em) {\n  .composition__photo--p1 {\n    left: 0;\n    top: 0;\n    transform: scale(1.2);\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition__photo--p1 {\n    top: 0;\n    left: 3rem;\n    transform: scale(1.5);\n    transform: scale(1.2);\n  }\n}\n.composition__photo--p2 {\n  left: 40%;\n  top: 2rem;\n}\n@media only screen and (max-width: 62.5em) {\n  .composition__photo--p2 {\n    top: -1rem;\n    left: 0;\n    transform: scale(1.2);\n    z-index: 20;\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition__photo--p2 {\n    top: 2rem;\n    left: 8rem;\n    z-index: 10;\n    transform: scale(1.5);\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .composition__photo--p2 {\n    top: -5rem;\n    left: 11rem;\n    transform: scale(1.2);\n  }\n}\n.composition__photo--p3 {\n  top: 12rem;\n  left: 16%;\n}\n@media only screen and (max-width: 62.5em) {\n  .composition__photo--p3 {\n    top: 1rem;\n    left: 0;\n    transform: scale(1.2);\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition__photo--p3 {\n    top: -2rem;\n    left: -12%;\n    transform: scale(1.5);\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .composition__photo--p3 {\n    top: -5rem;\n    left: 2rem;\n    transform: scale(1.2);\n  }\n}\n.composition__photo:hover {\n  z-index: 100;\n  transform: scale(1.05) translateY(-0.5rem);\n  box-shadow: 0 2.4rem 4rem rgba(0, 0, 0, 0.5);\n  outline: #55c57a solid 1.5rem;\n  outline-offset: 2rem;\n}\n@media only screen and (max-width: 62.5em) {\n  .composition__photo:hover {\n    transform: scale(1.25) translateY(-0.5rem);\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition__photo:hover {\n    transform: scale(1.55) translateY(-0.5rem);\n    outline-offset: 1rem;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .composition__photo:hover {\n    transform: scale(1.25) translateY(-0.5rem);\n    outline: #55c57a solid 1rem;\n    outline-offset: 0.5rem;\n  }\n}\n.composition:hover .composition__photo:not(:hover) {\n  transform: scale(0.95);\n}\n@media only screen and (max-width: 62.5em) {\n  .composition:hover .composition__photo:not(:hover) {\n    transform: scale(1.15);\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .composition:hover .composition__photo:not(:hover) {\n    transform: scale(1.45);\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .composition:hover .composition__photo:not(:hover) {\n    transform: scale(1.15);\n  }\n}\n\n.feature-box {\n  background-color: rgba(255, 255, 255, 0.8);\n  font-size: 1.4rem;\n  padding: 2.4rem;\n  border-radius: 3px;\n  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.16);\n  transition: all 0.2s ease-out;\n}\n@media only screen and (max-width: 75em) {\n  .feature-box {\n    padding: 1.6rem;\n  }\n}\n@media only screen and (max-width: 56.25em) {\n  .feature-box {\n    padding: 1.2rem;\n  }\n}\n.feature-box:hover {\n  transform: scale(1.04) translateY(-1.6rem);\n}\n.feature-box__icon {\n  font-size: 6.2rem;\n  background-image: linear-gradient(to right, #7ed56f, #28b485);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n}\n.card {\n  perspective: 100rem;\n  position: relative;\n  height: 52rem;\n}\n.card__side {\n  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);\n  transition: all 0.5s linear;\n  font-size: 3rem;\n  height: 52rem;\n  border-radius: 3px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  overflow: hidden;\n}\n.card__side--front {\n  background-color: #fff;\n}\n.card__side--back {\n  transform: rotateY(-180deg);\n}\n.card__side--back-1 {\n  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);\n}\n.card__side--back-2 {\n  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);\n}\n.card__side--back-3 {\n  background-image: linear-gradient(to right bottom, #2998ff, #5643fa);\n}\n.card:hover .card__side--front {\n  transform: rotateY(180deg);\n}\n.card:hover .card__side--back {\n  transform: rotateY(0);\n}\n.card__picture {\n  background-size: cover;\n  height: 23rem;\n  background-blend-mode: screen;\n  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);\n  clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);\n}\n.card__picture--1 {\n  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../../img/nat-5-1000.jpg);\n}\n.card__picture--2 {\n  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../../img/nat-6-1000.jpg);\n}\n.card__picture--3 {\n  background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../../img/nat-7-1000.jpg);\n}\n.card__heading {\n  font-size: 3rem;\n  font-weight: 300;\n  text-align: right;\n  color: #fff;\n  text-transform: uppercase;\n  position: absolute;\n  top: 12rem;\n  right: 2rem;\n  width: 75%;\n}\n.card__heading-span {\n  padding: 0.8rem;\n  -webkit-box-decoration-break: clone;\n  box-decoration-break: clone;\n}\n.card__heading-span--1 {\n  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));\n}\n.card__heading-span--2 {\n  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85));\n}\n.card__heading-span--3 {\n  background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85));\n}\n.card__details {\n  font-size: 1.6rem;\n  padding: 3.2rem;\n  text-align: center;\n}\n.card__details ul {\n  list-style: none;\n  max-width: 80%;\n  margin: auto;\n}\n.card__details li {\n  text-decoration: none;\n  padding: 0.8rem;\n}\n.card__details li:not(:last-child) {\n  border-bottom: 1px solid #dfdfdf;\n}\n.card__cta {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  color: #fff;\n  text-align: center;\n}\n.card__cta-only {\n  font-size: 1.4rem;\n  text-transform: uppercase;\n}\n.card__cta-value {\n  font-size: 6.2rem;\n  font-weight: 100;\n  margin-bottom: 8rem;\n}\n@media only screen and (max-width: 50em), only screen and (hover: none) {\n  .card {\n    height: auto;\n    box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.2);\n    background-color: #fff;\n  }\n  .card__side {\n    height: auto;\n    border-radius: 3px;\n    position: relative;\n    box-shadow: none;\n  }\n  .card__side--back {\n    transform: rotateY(0);\n    clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);\n  }\n  .card:hover .card__side--front {\n    transform: rotateY(0);\n  }\n  .card__cta {\n    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);\n    top: 0;\n    left: 0;\n    transform: none;\n    position: relative;\n    color: #fff;\n    width: 100%;\n    padding: 4.8rem 0 3.2rem 0;\n  }\n  .card__cta-only {\n    font-weight: 600;\n  }\n  .card__cta-value {\n    font-size: 4.4rem;\n    font-weight: 200;\n    margin-bottom: 2.4rem;\n  }\n}\n@media only screen and (max-width: 31.25em), only screen and (hover: none) {\n  .card__picture {\n    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0 100%);\n  }\n  .card__details {\n    padding: 1.6rem;\n  }\n  .card__details li {\n    padding: 0.4rem;\n  }\n  .card__side--back {\n    transform: rotateY(0);\n    clip-path: polygon(0 10%, 100% 0, 100% 100%, 0 100%);\n  }\n  .card__cta {\n    padding: 2.4rem 0 1.6rem 0;\n  }\n  .card__cta-value {\n    margin-bottom: 1.6rem;\n  }\n}\n\n.story {\n  width: 75%;\n  margin: 0 auto;\n  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.1);\n  padding: 6.4rem;\n  border-radius: 3px;\n  background-color: rgba(255, 255, 255, 0.6);\n  font-size: 1.6rem;\n  padding-left: 9.6rem;\n  transform: skewX(-12deg);\n}\n@media only screen and (max-width: 50em) {\n  .story {\n    width: 100%;\n    padding: 3.2rem 3.2rem 3.2rem 4.8rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .story {\n    transform: skewX(0);\n  }\n}\n.story:hover .story__caption {\n  transform: translate(-50%, -50%);\n  opacity: 1;\n}\n.story > * {\n  transform: skewX(12deg);\n}\n@media only screen and (max-width: 37.5em) {\n  .story > * {\n    transform: skewX(0);\n  }\n}\n.story__shape {\n  float: left;\n  width: 15.2rem;\n  height: 15.2rem;\n  overflow: hidden;\n  border-radius: 50%;\n  transform: translateX(-3.2rem) skewX(12deg);\n  position: relative;\n}\n@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\n  .story__shape {\n    -webkit-shape-outside: circle(50% at 50% 50%);\n    shape-outside: circle(50% at 50% 50%);\n    -webkit-clip-path: circle(50% at 50% 50%);\n    clip-path: circle(50% at 50% 50%);\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .story__shape {\n    transform: translateX(-3.2rem) skewX(0);\n  }\n}\n@media only screen and (max-width: 25em) {\n  .story__shape {\n    float: none;\n    left: 50%;\n    transform: translateX(-50%) skewX(0);\n    margin-bottom: 2.4rem;\n  }\n}\n.story__img {\n  height: 100%;\n  transform: translateX(-4rem) scale(1.4);\n  backface-visibility: hidden;\n  transition: all 0.5s;\n}\n@media only screen and (max-width: 25em) {\n  .story__img {\n    text-align: center;\n  }\n}\n.story:hover .story__img {\n  filter: blur(2px) brightness(0.8);\n  transform: translateX(-4rem) scale(1);\n}\n.story__caption {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  color: #fff;\n  z-index: 100;\n  transform: translate(-50%, 20%);\n  text-align: center;\n  text-transform: uppercase;\n  opacity: 0;\n  transition: all 0.5s;\n  backface-visibility: hidden;\n}\n\n.bg-video {\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  height: 100%;\n  width: 100%;\n  z-index: -1;\n  opacity: 0.15;\n}\n.bg-video__content {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n}\n\n.form__group {\n  margin-bottom: 1.2rem;\n}\n@media only screen and (max-width: 50em) {\n  .form__group {\n    margin-bottom: 0;\n    width: 70%;\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .form__group {\n    width: 80%;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .form__group {\n    width: 100%;\n  }\n}\n.form__input {\n  border-style: none;\n  height: 3.2rem;\n  width: 90%;\n  padding: 2.4rem 1.6rem;\n  font-family: inherit;\n  font-size: 1.6rem;\n  color: inherit;\n  transition: all 0.3s;\n  border-bottom: 3px solid transparent;\n}\n.form__input::-webkit-input-placeholder, .form__input::placeholder {\n  color: #c9c9c9;\n}\n.form__input:focus {\n  outline: none;\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);\n}\n.form__input:focus:invalid {\n  border-bottom: 3px solid #ff7730;\n}\n.form__input:focus:valid {\n  border-bottom: 3px solid #55c57a;\n}\n@media only screen and (max-width: 37.5em) {\n  .form__input {\n    height: 2.4rem;\n    padding: 1.6rem 1.2rem;\n    width: 100%;\n  }\n}\n.form__input:placeholder-shown + .form__label {\n  transform: translateY(-4rem);\n  visibility: hidden;\n  opacity: 0;\n}\n.form__label {\n  padding: 0.8rem 1.6rem;\n  font-weight: 600;\n  font-size: 1.2rem;\n  letter-spacing: 1.2px;\n  transition: all 0.3s;\n  display: inline-block;\n}\n@media only screen and (max-width: 37.5em) {\n  .form__label {\n    padding: 0.4rem 0.2rem;\n  }\n}\n.form__radio-group {\n  display: inline-block;\n  width: 49%;\n}\n@media only screen and (max-width: 50em) {\n  .form__radio-group {\n    display: block;\n    width: auto;\n  }\n  .form__radio-group:not(:last-child) {\n    margin-bottom: 0.8rem;\n  }\n}\n.form__radio-input {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 2.4rem;\n  height: 2.4rem;\n  background-color: transparent;\n  border: 3px solid #55c57a;\n  border-radius: 50%;\n  margin-right: 1.2rem;\n}\n.form__radio-input::before {\n  content: \"\";\n  display: block;\n  width: 75%;\n  height: 75%;\n  background-color: #55c57a;\n  border-radius: 50%;\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0;\n  transition: all 0.4s;\n}\n.form__radio-input:checked::before {\n  opacity: 1;\n}\n.form__radio-label {\n  font-size: 1.6rem;\n  color: #777;\n}\n.form__radio-input, .form__radio-label {\n  cursor: pointer;\n  vertical-align: middle;\n}\n\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 3000;\n  background-color: rgba(0, 0, 0, 0.8);\n  visibility: hidden;\n  opacity: 0;\n  transition: all 0.3s;\n}\n@supports (-webkit-backdrop-filter: blur(5px)) or (backdrop-filter: blur(5px)) {\n  .popup {\n    -webkit-backdrop-filter: blur(5px);\n    backdrop-filter: blur(5px);\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n}\n.popup__content {\n  border-radius: 3px;\n  background-color: #fff;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 75%;\n  display: table;\n  overflow: hidden;\n  opacity: 0;\n  transform: translate(-50%, -50%) scale(0);\n  transition: all 0.5s 0.2s;\n}\n@media only screen and (max-width: 43.75em) {\n  .popup__content {\n    width: 90%;\n  }\n}\n.popup__content-left {\n  display: table-cell;\n  width: 33.3333333333%;\n}\n@media only screen and (max-width: 90.5625em) {\n  .popup__content-left {\n    display: none;\n  }\n}\n.popup__content-right {\n  display: table-cell;\n  width: 66.6666666667%;\n  vertical-align: middle;\n  padding: 2.4rem 4rem;\n}\n@media only screen and (max-width: 90.5625em) {\n  .popup__content {\n    background-image: linear-gradient(rgba(255, 255, 255, 0.95) 0% 100%), url(../../img/nat-1-1500.jpg);\n  }\n}\n.popup__img {\n  width: 100%;\n  display: block;\n}\n.popup__img:not(:last-child) {\n  margin-bottom: 0.8rem;\n}\n.popup__text {\n  font-size: 1.4rem;\n  column-count: 2;\n  column-gap: 4rem;\n  column-rule: 1px solid #c9c9c9;\n  -moz-hyphens: auto;\n  -ms-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n  text-align: justify;\n}\n@media only screen and (max-width: 56.25em) {\n  .popup__text {\n    column-count: 1;\n    hyphens: none;\n  }\n}\n.popup__button {\n  text-align: center;\n}\n.popup:target {\n  visibility: visible;\n  opacity: 1;\n}\n.popup:target .popup__content {\n  transform: translate(-50%, -50%) scale(1);\n  opacity: 1;\n}\n.popup__close {\n  position: fixed;\n  top: 2.4rem;\n  right: 2.4rem;\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 50%;\n  transition: all 0.2s;\n}\n.popup__close-btn:link, .popup__close-btn:visited {\n  line-height: 0;\n  color: #777;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: inline-block;\n  font-size: 3rem;\n  text-decoration: none;\n}\n@media only screen and (max-width: 56.25em) {\n  .popup__close-btn:link, .popup__close-btn:visited {\n    font-size: 4.4rem;\n  }\n}\n.popup__close-btn:link:hover, .popup__close-btn:link:active, .popup__close-btn:visited:hover, .popup__close-btn:visited:active {\n  color: #fff;\n}\n.popup__close:hover {\n  background-color: #55c57a;\n  transform: translateY(-1px);\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);\n}\n.popup__close:active {\n  transform: translateY(1px);\n  box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.5);\n}\n\n.section-about {\n  background-color: #f7f7f7;\n  padding: 22.4rem 0;\n  margin-top: -20vh;\n}\n@media only screen and (max-width: 68.75em) {\n  .section-about {\n    padding: 24rem 3.2rem 20.8rem 3.2rem;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .section-about {\n    padding: 17.6rem 2.4rem 14.4rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .section-about {\n    padding: 14.4rem 1.6rem 9.6rem 1.6rem;\n  }\n}\n\n.section-features {\n  padding: 17.6rem 0;\n  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4-1000.jpg);\n  background-size: cover;\n  transform: skewY(-5deg);\n  margin-top: -7rem;\n}\n.section-features > * {\n  transform: skewY(5deg);\n}\n@media only screen and (max-width: 62.5em) and (min-resolution: 96dpi), only screen and (max-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 31.25em) and (min-resolution: 192dpi), only screen and (max-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 20.81em) and (min-resolution: 288dpi), only screen and (max-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .section-features {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4-1000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≤ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi (standard displays). 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≤ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≤ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 62.5em) and (min-resolution: 96dpi), only screen and (min-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 31.25em) and (min-resolution: 192dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 20.81em) and (min-resolution: 288dpi), only screen and (min-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .section-features {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4-1500.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi. 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≥ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 93.75em) and (min-resolution: 96dpi), only screen and (min-width: 93.75em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 46.875em) and (min-resolution: 192dpi), only screen and (min-width: 46.875em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 31.25em) and (min-resolution: 288dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 3) {\n  .section-features {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4-2000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1500px (1500px screen width / 16px default font size = 93.75em) with a minimum resolution of 96dpi. 1.0DPR x 1500px = 1500px screen width.\n    - Screen width ≥ 750px (750px screen width / 16px default font size = 62.5em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 750px = 1500px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 500px = 1500px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 68.75em) {\n  .section-features {\n    padding: 16rem 0;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .section-features {\n    padding: 12.8rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .section-features {\n    padding: 8rem 1.6rem;\n  }\n}\n\n.section-tours {\n  background-color: #f7f7f7;\n  padding: 17.6rem 0 14.4rem 0;\n  margin-top: -7rem;\n}\n@media only screen and (max-width: 68.75em) {\n  .section-tours {\n    padding: 16rem 0 11.2rem 0;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .section-tours {\n    padding: 17.6rem 2.4rem 9.6rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .section-tours {\n    padding: 14.4rem 1.6rem 9.6rem 1.6rem;\n  }\n}\n\n.section-stories {\n  padding: 14.4rem 0;\n  position: relative;\n}\n@media only screen and (max-width: 68.75em) {\n  .section-stories {\n    padding: 11.2rem 0;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .section-stories {\n    padding: 9.6rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .section-stories {\n    padding: 8rem 1.6rem;\n  }\n}\n\n.section-book {\n  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);\n  padding: 17.6rem 0;\n}\n@media only screen and (max-width: 68.75em) {\n  .section-book {\n    padding: 11.2rem 0;\n  }\n}\n@media only screen and (max-width: 50em) {\n  .section-book {\n    padding: 9.6rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .section-book {\n    padding: 8rem;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .section-book {\n    padding: 4.8rem;\n  }\n}\n@media only screen and (max-width: 25em) {\n  .section-book {\n    padding: 6.4rem 3.2rem;\n  }\n}\n\n.book {\n  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 50%, transparent 50%), url(../../img/nat-10-1000.jpg);\n  background-size: cover;\n  border-radius: 3px;\n  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.15);\n}\n@media only screen and (max-width: 62.5em) and (min-resolution: 96dpi), only screen and (max-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 31.25em) and (min-resolution: 192dpi), only screen and (max-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 20.81em) and (min-resolution: 288dpi), only screen and (max-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 50%, transparent 50%), url(../../img/nat-10-1000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≤ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi (standard displays). 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≤ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≤ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 62.5em) and (min-resolution: 96dpi), only screen and (min-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 31.25em) and (min-resolution: 192dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 20.81em) and (min-resolution: 288dpi), only screen and (min-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 50%, transparent 50%), url(../../img/nat-10-1500.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi. 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≥ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 93.75em) and (min-resolution: 96dpi), only screen and (min-width: 93.75em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 46.875em) and (min-resolution: 192dpi), only screen and (min-width: 46.875em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 31.25em) and (min-resolution: 288dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 50%, transparent 50%), url(../../img/nat-10-2000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1500px (1500px screen width / 16px default font size = 93.75em) with a minimum resolution of 96dpi. 1.0DPR x 1500px = 1500px screen width.\n    - Screen width ≥ 750px (750px screen width / 16px default font size = 62.5em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 750px = 1500px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 500px = 1500px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 43.75em) and (max-width: 62.5em) and (min-resolution: 96dpi), only screen and (max-width: 43.75em) and (max-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 43.75em) and (max-width: 31.25em) and (min-resolution: 192dpi), only screen and (max-width: 43.75em) and (max-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 43.75em) and (max-width: 20.81em) and (min-resolution: 288dpi), only screen and (max-width: 43.75em) and (max-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 60%, transparent 60%), url(../../img/nat-10-1000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≤ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi (standard displays). 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≤ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≤ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 43.75em) and (min-width: 62.5em) and (min-resolution: 96dpi), only screen and (max-width: 43.75em) and (min-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 43.75em) and (min-width: 31.25em) and (min-resolution: 192dpi), only screen and (max-width: 43.75em) and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 43.75em) and (min-width: 20.81em) and (min-resolution: 288dpi), only screen and (max-width: 43.75em) and (min-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 60%, transparent 60%), url(../../img/nat-10-1500.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi. 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≥ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 43.75em) and (min-width: 93.75em) and (min-resolution: 96dpi), only screen and (max-width: 43.75em) and (min-width: 93.75em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 43.75em) and (min-width: 46.875em) and (min-resolution: 192dpi), only screen and (max-width: 43.75em) and (min-width: 46.875em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 43.75em) and (min-width: 31.25em) and (min-resolution: 288dpi), only screen and (max-width: 43.75em) and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 3) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 60%, transparent 60%), url(../../img/nat-10-2000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1500px (1500px screen width / 16px default font size = 93.75em) with a minimum resolution of 96dpi. 1.0DPR x 1500px = 1500px screen width.\n    - Screen width ≥ 750px (750px screen width / 16px default font size = 62.5em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 750px = 1500px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 500px = 1500px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .book {\n    background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 100%, transparent 100%);\n  }\n}\n.book__form {\n  width: 50%;\n  padding: 4.8rem;\n}\n@media only screen and (max-width: 50em) {\n  .book__form {\n    padding: 4rem;\n    width: 70%;\n  }\n}\n@media only screen and (max-width: 43.75em) {\n  .book__form {\n    padding: 3.2rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .book__form {\n    width: auto;\n    padding: 7.2rem;\n  }\n}\n@media only screen and (max-width: 31.25em) {\n  .book__form {\n    width: auto;\n    padding: 3.2rem;\n  }\n}\n\n.header {\n  height: 85vh;\n  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/hero-1000.jpg);\n  background-size: cover;\n  background-position: top;\n  /* Load hero-1000.jpg image */\n  /* Load hero-1500.jpg image */\n  /* Load hero-2000.jpg image */\n}\n@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\n  .header {\n    height: 95vh;\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 95%);\n    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 95%);\n  }\n}\n@media only screen and (max-width: 62.5em) and (min-resolution: 96dpi), only screen and (max-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (max-width: 31.25em) and (min-resolution: 192dpi), only screen and (max-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: 20.81em) and (min-resolution: 288dpi), only screen and (max-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .header {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/hero-1000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≤ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi (standard displays). 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≤ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≤ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 62.5em) and (min-resolution: 96dpi), only screen and (min-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 31.25em) and (min-resolution: 192dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 20.81em) and (min-resolution: 288dpi), only screen and (min-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\n  .header {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/hero-1500.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi. 1.0DPR x 1000px = 1000px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\n    - Screen width ≥ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\n    */\n  }\n}\n@media only screen and (min-width: 93.75em) and (min-resolution: 96dpi), only screen and (min-width: 93.75em) and (-webkit-min-device-pixel-ratio: 1), only screen and (min-width: 46.875em) and (min-resolution: 192dpi), only screen and (min-width: 46.875em) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: 31.25em) and (min-resolution: 288dpi), only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 3) {\n  .header {\n    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/hero-2000.jpg);\n    /*\n    Media query conditions explained:\n    - Screen width ≥ 1500px (1500px screen width / 16px default font size = 93.75em) with a minimum resolution of 96dpi. 1.0DPR x 1500px = 1500px screen width.\n    - Screen width ≥ 750px (750px screen width / 16px default font size = 62.5em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 750px = 1500px screen width.\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 500px = 1500px screen width.\n    */\n  }\n}\n@media only screen and (max-width: 75em) {\n  .header {\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 90%);\n    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 90%);\n  }\n}\n.header__logo-box {\n  position: absolute;\n  top: 4rem;\n  left: 4rem;\n}\n@media only screen and (max-width: 56.25em) {\n  .header__logo-box {\n    top: 6.4rem;\n    left: 6.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  .header__logo-box {\n    top: 4rem;\n    left: 4rem;\n  }\n}\n.header__logo {\n  height: 4rem;\n  backface-visibility: hidden;\n}\n.header__logo:hover {\n  animation: enlarge 1s ease-in-out;\n}\n@media only screen and (max-width: 37.5em) {\n  .header__logo {\n    height: 4.8rem;\n  }\n}\n.header__text-box {\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n.row {\n  max-width: 114rem;\n  margin: 0 auto;\n}\n.row:not(:last-child) {\n  margin-bottom: 8rem;\n}\n.row::after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n@media only screen and (max-width: 50em) {\n  .row {\n    max-width: 55%;\n  }\n}\n\n[class^=col-] {\n  float: left;\n}\n[class^=col-]:not(:last-child) {\n  margin-right: 6.4rem;\n}\n@media only screen and (max-width: 68.75em) {\n  [class^=col-]:not(:last-child) {\n    margin-right: 3.2rem;\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  [class^=col-]:not(:last-child) {\n    margin-right: 1.6rem;\n  }\n}\n@media only screen and (max-width: 50em) {\n  [class^=col-]:not(:last-child) {\n    margin-right: 0;\n    margin-bottom: 4.8rem;\n  }\n}\n@media only screen and (max-width: 50em) {\n  [class^=col-] {\n    width: 100% !important;\n  }\n}\n\n.col-1-of-2 {\n  width: calc((100% - 6.4rem) / 2);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-1-of-2 {\n    width: calc((100% - 3.2rem) / 2);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-1-of-2 {\n    width: 100%;\n  }\n}\n\n.col-1-of-3 {\n  width: calc((100% - 12.8rem) / 3);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-1-of-3 {\n    width: calc((100% - 6.4rem) / 3);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-1-of-3 {\n    width: calc((100% - 3.2rem) / 3);\n  }\n}\n\n.col-1-of-4 {\n  width: calc((100% - 19.2rem) / 4);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-1-of-4 {\n    width: calc((100% - 9.6rem) / 4);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-1-of-4 {\n    width: calc((100% - 4.8rem) / 4);\n  }\n}\n\n.col-2-of-3 {\n  width: calc((100% - 12.8rem) / 3 * 2 + 6.4rem);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-2-of-3 {\n    width: calc((100% - 6.4rem) / 3 * 2 + 3.2rem);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-2-of-3 {\n    width: calc((100% - 3.2rem) / 3 * 2 + 1.6rem);\n  }\n}\n\n.col-2-of-4 {\n  width: calc((100% - 19.2rem) / 4 * 2 + 6.4rem);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-2-of-4 {\n    width: calc((100% - 9.6rem) / 4 * 2 + 3.2rem);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-2-of-4 {\n    width: calc((100% - 4.8rem) / 4 * 2 + 1.6rem);\n  }\n}\n\n.col-3-of-4 {\n  width: calc((100% - 19.2rem) / 4 * 3 + 12.8rem);\n}\n@media only screen and (max-width: 68.75em) {\n  .col-3-of-4 {\n    width: calc((100% - 9.6rem) / 4 * 3 + 6.4rem);\n  }\n}\n@media only screen and (max-width: 62.5em) {\n  .col-3-of-4 {\n    width: calc((100% - 4.8rem) / 4 * 3 + 3.2rem);\n  }\n}\n\nfooter {\n  background-color: #333333;\n  padding: 14.4rem 0;\n  color: #f7f7f7;\n  font-size: 1.4rem;\n}\n@media only screen and (max-width: 62.5em) {\n  footer {\n    padding: 11.2rem 0;\n  }\n}\n@media only screen and (max-width: 50em) {\n  footer {\n    padding: 9.6rem 2.4rem;\n  }\n}\n@media only screen and (max-width: 37.5em) {\n  footer {\n    padding: 8rem 1.6rem;\n  }\n}\n\n.footer__logo {\n  width: 15rem;\n  height: auto;\n}\n.footer__logo-box {\n  text-align: center;\n  margin-bottom: 6.4rem;\n}\n@media only screen and (max-width: 50em) {\n  .footer__logo-box {\n    margin-bottom: 3.2rem;\n  }\n}\n.footer__navigation, .footer__copyright {\n  display: inline-block;\n  width: 84.5%;\n  padding-top: 1.6rem;\n  border-top: 1px solid #777;\n}\n@media only screen and (max-width: 62.5em) {\n  .footer__navigation, .footer__copyright {\n    width: 100%;\n  }\n}\n.footer__navigation {\n  text-align: center;\n}\n@media only screen and (max-width: 62.5em) {\n  .footer__navigation {\n    margin-bottom: 6.4rem;\n  }\n}\n.footer__copyright {\n  float: right;\n}\n@media only screen and (max-width: 62.5em) {\n  .footer__copyright {\n    float: none;\n  }\n}\n.footer__list {\n  list-style: none;\n}\n.footer__item {\n  display: inline-block;\n}\n.footer__item:not(:last-child) {\n  margin-right: 1.6rem;\n}\n.footer__link, .footer__link:link, .footer__link:visited {\n  display: inline-block;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: #f7f7f7;\n  transition: all 0.2s;\n}\n.footer__link:hover, .footer__link:active, .footer__link:link:hover, .footer__link:link:active, .footer__link:visited:hover, .footer__link:visited:active {\n  color: #55c57a;\n  transform: rotate(5deg) scale(1.3);\n  box-shadow: 0 0.5rem 1.5rem 0.3rem rgba(0, 0, 0, 0.3);\n  background-color: #333333;\n}\n\n.navigation__checkbox {\n  display: none;\n  appearance: none;\n}\n.navigation__icon {\n  position: relative;\n  top: 50%;\n}\n.navigation__icon, .navigation__icon::before, .navigation__icon::after {\n  display: inline-block;\n  height: 1.5px;\n  width: 3.2rem;\n  background-color: #333333;\n}\n.navigation__icon::before, .navigation__icon::after {\n  content: \"\";\n  position: absolute;\n  transition: all 0.3s;\n  left: 0;\n}\n.navigation__icon::before {\n  top: -0.8rem;\n}\n.navigation__icon::after {\n  top: 0.8rem;\n}\n.navigation__button:hover .navigation__icon::before {\n  transform: scaleY(1.5) translateY(-0.1rem);\n}\n.navigation__button:hover .navigation__icon::after {\n  transform: scaleY(1.5) translateY(0.1rem);\n}\n.navigation__checkbox:checked + .navigation__button .navigation__icon {\n  background-color: transparent;\n}\n.navigation__checkbox:checked + .navigation__button .navigation__icon::before {\n  top: 0;\n  transform: rotate(135deg);\n}\n.navigation__checkbox:checked + .navigation__button .navigation__icon::after {\n  top: 0;\n  transform: rotate(-135deg);\n}\n.navigation__button, .navigation__background {\n  display: inline-block;\n  border-radius: 50%;\n  position: fixed;\n}\n.navigation__button {\n  width: 6.4rem;\n  height: 6.4rem;\n  top: 6.4rem;\n  right: 6.4rem;\n  background-color: #fff;\n  z-index: 300;\n  text-align: center;\n  box-shadow: 0 1rem 1.5rem rgba(0, 0, 0, 0.1);\n  transition: all 0.2s;\n}\n.navigation__button:hover {\n  cursor: pointer;\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\n}\n.navigation__button:active {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.25);\n  transform: translateY(0.3rem);\n}\n@media only screen and (max-width: 37.5em) {\n  .navigation__button {\n    top: 3.6rem;\n    right: 3.6rem;\n  }\n}\n.navigation__background {\n  width: 5.9rem;\n  height: 5.9rem;\n  top: 6.8rem;\n  right: 6.8rem;\n  z-index: 100;\n  background-image: radial-gradient(#7ed56f, #28b485);\n  transition: all 0.8s cubic-bezier(0.86, 0, 0.07, 1);\n}\n@media only screen and (max-width: 37.5em) {\n  .navigation__background {\n    top: 3.8rem;\n    right: 3.8rem;\n  }\n}\n.navigation__checkbox:checked ~ .navigation__background {\n  transform: scale(80);\n}\n.navigation__nav {\n  height: 100vh;\n  width: 0%;\n  position: fixed;\n  top: 0%;\n  left: 0%;\n  z-index: 200;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n.navigation__checkbox:checked ~ .navigation__nav {\n  width: 100%;\n  opacity: 1;\n  visibility: visible;\n}\n.navigation__list {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  width: 100%;\n}\n.navigation__item {\n  display: block;\n  list-style: none;\n  margin: 1.2rem;\n}\n.navigation__link, .navigation__link:link, .navigation__link:visited {\n  font-size: 3.6rem;\n  font-weight: 300;\n  color: #fff;\n  text-decoration: none;\n  text-transform: uppercase;\n  display: inline-block;\n  padding: 0.8rem 2.4rem;\n  background-image: linear-gradient(120deg, transparent 0 50%, #fff 50% 100%);\n  transition: all 0.4s;\n  background-size: 230%;\n}\n.navigation__link span, .navigation__link:link span, .navigation__link:visited span {\n  margin-right: 1.6rem;\n}\n.navigation__link:hover, .navigation__link:active, .navigation__link:link:hover, .navigation__link:link:active, .navigation__link:visited:hover, .navigation__link:visited:active {\n  background-position: 100%;\n  color: #55c57a;\n  transform: translateX(0.8rem);\n}\n@media only screen and (max-width: 31.25em) {\n  .navigation__link, .navigation__link:link, .navigation__link:visited {\n    font-size: 3rem;\n  }\n}","@mixin clearfix {\r\n  &::after {\r\n    content: \"\";\r\n    display: table;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n// Column widths mixins\r\n@mixin column-width($gutter-horizontal, $no-columns, $occupied-space-col) {\r\n  @if $no-columns == 2 and $occupied-space-col == 1 {\r\n    width: calc((100% - $gutter-horizontal) / 2);\r\n  }\r\n  @if $no-columns == 3 and $occupied-space-col == 1 {\r\n    width: calc((100% - (2 * $gutter-horizontal)) / 3);\r\n  }\r\n  @if $no-columns == 4 and $occupied-space-col == 1 {\r\n    width: calc((100% - (3 * $gutter-horizontal)) / 4);\r\n  }\r\n  @if $no-columns == 3 and $occupied-space-col == 2 {\r\n    width: calc(\r\n      ((100% - (2 * $gutter-horizontal)) / 3) * 2 + $gutter-horizontal\r\n    );\r\n  }\r\n  @if $no-columns == 4 and $occupied-space-col == 2 {\r\n    width: calc(\r\n      ((100% - (3 * $gutter-horizontal)) / 4) * 2 + $gutter-horizontal\r\n    );\r\n  }\r\n  @if $no-columns == 4 and $occupied-space-col == 3 {\r\n    width: calc(\r\n      ((100% - (3 * $gutter-horizontal)) / 4) * 3 + 2 * $gutter-horizontal\r\n    );\r\n  }\r\n}\r\n\r\n@mixin absolute_positioning_center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n@mixin button-shadow-static {\r\n  box-shadow: 0 1rem 1.5rem rgba($color-black, 0.1);\r\n}\r\n@mixin button-shadow-hover {\r\n  box-shadow: 0 1rem 2rem rgba($color-black, 0.2);\r\n}\r\n@mixin button-shadow-active {\r\n  box-shadow: 0 0.5rem 1rem rgba($color-black, 0.25);\r\n}\r\n\r\n// rem and em do not depend on the html font-size in media queries.\r\n// Instead, 1 rem = 1em = 16px\r\n// rem units are buggy in some browsers, therefore we should always use em\r\n// to calculate the width in em, use the following formula: em width = pixels / 16\r\n// We also don't want to use pixels for accessibility reasons (the user still want to apply their custom web browser font size on our page) and zoom feature.\r\n\r\n/*\r\n======== MEDIA QUERY MANAGER ========\r\n\r\n0 - 600 (37.5em):         Phone\r\n600 - 900 (56.25em):      Tablet portrait\r\n900 - 1200 (75em):     Tablet landscape\r\n1200 - 1800 (112.5em):    Normal style\r\n1800+ :                   Big desktop\r\n*/\r\n\r\n/*\r\n======== BREAKPOINT ARGUMENTS ========\r\n- phone\r\n- tab-port\r\n- tab-land\r\n- normal-dt\r\n  a) normal-dt-s\r\n  b) normal-dt-m\r\n  c) normal-dt-b\r\n- big-dt\r\n\r\nThe ORDER of styling our webpage with media queries: \r\n1. Base + typography\r\n2. General layout + grid\r\n3. Page layout\r\n4. Components\r\n\r\n*/\r\n\r\n@mixin respond-to($breakpoint) {\r\n  @if $breakpoint == phone-sm {\r\n    // width < 400px\r\n    @media only screen and (max-width: 25em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == phone-med {\r\n    // width < 500px\r\n    @media only screen and (max-width: 31.25em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == phone-big {\r\n    // width < 600px\r\n    @media only screen and (max-width: 37.5em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == tab-port-sm {\r\n    // width < 700px\r\n    @media only screen and (max-width: 43.75em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == tab-port-med {\r\n    // width < 800px\r\n    @media only screen and (max-width: 50em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == tab-port-big {\r\n    // width < 900px\r\n    @media only screen and (max-width: 56.25em) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $breakpoint == tab-land-sm {\r\n    // width < 1000px\r\n    @media only screen and (max-width: 62.5em) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $breakpoint == tab-land-med {\r\n    // width < 1100px\r\n    @media only screen and (max-width: 68.75em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == tab-land {\r\n    // width < 1200px\r\n    @media only screen and (max-width: 75em) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $breakpoint == popup {\r\n    // width < 1449px\r\n    @media only screen and (max-width: 90.5625em) {\r\n      @content;\r\n    }\r\n  }\r\n  @if $breakpoint == big-dt {\r\n    // width > 1800px\r\n    @media only screen and (min-width: 112.5em) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  CSS media query syntax for background image explanation:\r\n\r\n  \"@media\"\r\n    The @media rule is used in CSS to apply styles based on specific conditions, such as the type of device, screen size, or resolution. It allows you to create responsive designs that adapt to different environments.\r\n\r\n  \"only screen\"\r\n    only: This keyword is used to apply the media query to specific media types and to hide styles from older browsers that do not support media queries. It’s optional but can improve compatibility.\r\n\r\n    screen: This keyword specifies that the styles should be applied to screen devices (monitors, tablets, smartphones). Other values could be \"print\" for print media or \"all\" for all media types.\r\n\r\n  \"and\"\r\n    The and keyword is used to combine multiple conditions in a media query. All conditions must be true for the styles to be applied.\r\n\r\n  \"(max-width: 1000px)\"\r\n    This condition applies the styles if the viewport width is less than or equal to 1000 pixels. It targets devices with smaller screens, such as tablets and smartphones.\r\n\r\n  \"(min-resolution: 96dpi)\"\r\n    This condition applies the styles if the device has a resolution of at least 96 dots per inch (dpi). This is a standard resolution for many devices.\r\n\r\n  \",\" (Comma)\r\n    The comma acts as an \"or\" operator, meaning that if any of the combined conditions (each set of conditions separated by commas) are true, the styles within the media query will be applied.\r\n  */\r\n\r\n/*\r\n  Screen resolutions:\r\n  DPR 1.0 = 96 dpi (standard displays)\r\n  DPR 2.0 = 192 dpi (2x Retina displays)\r\n  DPR 3.0 = 288 dpi (3x Retina displays)\r\n  */\r\n\r\n/* Load a 1000px wide image */\r\n@mixin resolution-media-1000 {\r\n  @media only screen and (max-width: 62.5em) and (min-resolution: 96dpi),\r\n    only screen and (max-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1),\r\n    only screen and (max-width: 31.25em) and (min-resolution: 192dpi),\r\n    only screen and (max-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2),\r\n    only screen and (max-width: 20.81em) and (min-resolution: 288dpi),\r\n    only screen and (max-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\r\n    @content;\r\n    /*\r\n    Media query conditions explained:\r\n    - Screen width ≤ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi (standard displays). 1.0DPR x 1000px = 1000px screen width.\r\n    - Screen width ≤ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\r\n    - Screen width ≤ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\r\n    */\r\n  }\r\n}\r\n\r\n/* Load a 1500px wide image */\r\n@mixin resolution-media-1500 {\r\n  @media only screen and (min-width: 62.5em) and (min-resolution: 96dpi),\r\n    only screen and (min-width: 62.5em) and (-webkit-min-device-pixel-ratio: 1),\r\n    only screen and (min-width: 31.25em) and (min-resolution: 192dpi),\r\n    only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 2),\r\n    only screen and (min-width: 20.81em) and (min-resolution: 288dpi),\r\n    only screen and (min-width: 20.81em) and (-webkit-min-device-pixel-ratio: 3) {\r\n    @content;\r\n    /*\r\n    Media query conditions explained:\r\n    - Screen width ≥ 1000px (1000px screen width / 16px default font size = 62.5em) with a minimum resolution of 96dpi. 1.0DPR x 1000px = 1000px screen width.\r\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 500px = 1000px screen width.\r\n    - Screen width ≥ 333px (333px screen width/16px default font size = 20.81em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 333px = 999px screen width.\r\n    */\r\n  }\r\n}\r\n/* Load a 2000px wide image */\r\n@mixin resolution-media-2000 {\r\n  @media only screen and (min-width: 93.75em) and (min-resolution: 96dpi),\r\n    only screen and (min-width: 93.75em) and (-webkit-min-device-pixel-ratio: 1),\r\n    only screen and (min-width: 46.875em) and (min-resolution: 192dpi),\r\n    only screen and (min-width: 46.875em) and (-webkit-min-device-pixel-ratio: 2),\r\n    only screen and (min-width: 31.25em) and (min-resolution: 288dpi),\r\n    only screen and (min-width: 31.25em) and (-webkit-min-device-pixel-ratio: 3) {\r\n    @content;\r\n    /*\r\n    Media query conditions explained:\r\n    - Screen width ≥ 1500px (1500px screen width / 16px default font size = 93.75em) with a minimum resolution of 96dpi. 1.0DPR x 1500px = 1500px screen width.\r\n    - Screen width ≥ 750px (750px screen width / 16px default font size = 62.5em) with a minimum resolution of 192dpi (2x Retina displays). 2.0DPR x 750px = 1500px screen width.\r\n    - Screen width ≥ 500px (500px screen width/16px default font size = 31.25em) with a minimum resolution of 288dpi (3x Retina displays). 3.0DPR x 500px = 1500px screen width.\r\n    */\r\n  }\r\n}\r\n","// ========= COLOURS =========\r\n// PRIMARY\r\n$color-primary: #55c57a;\r\n$color-primary-light: #7ed56f;\r\n$color-primary-dark: #28b485;\r\n\r\n// SECONDARY\r\n$color-secondary-light: #ffb900;\r\n$color-secondary-dark: #ff7730;\r\n\r\n// TERTIARY\r\n$color-tertiary-light: #2998ff;\r\n$color-tertiary-dark: #5643fa;\r\n\r\n// GREY & SHADES\r\n$color-grey-light-1: #f7f7f7;\r\n$color-grey-light-2: #c9c9c9;\r\n$color-grey-light-3: #dfdfdf;\r\n$color-grey: #a0a0a0;\r\n$color-grey-dark: #777;\r\n$color-grey-dark-2: #333333;\r\n$color-white: #fff;\r\n$color-black: #000;\r\n\r\n// FONT\r\n\r\n$default-font-size: 1.6rem;\r\n\r\n// GRID\r\n$grid-width: 114rem;\r\n$gutter-vertical: 8rem;\r\n$gutter-horizontal-big: 6.4rem;\r\n$gutter-horizontal-normal: 3.2rem;\r\n$gutter-horizontal-small: 1.6rem;\r\n\r\n// BORDER RADIUS\r\n$br-normal: 3px;\r\n\r\n// SECTION WHITESPACE\r\n\r\n/* ************* DESKTOP *************** */\r\n$section-padding-big: 22.4rem 0;\r\n$section-padding-normal: 17.6rem 0;\r\n$section-padding-small: 14.4rem 0;\r\n$section-padding-btm-sm: 17.6rem 0 14.4rem 0;\r\n\r\n/* ************* TABLET LANDSCAPE *************** */\r\n$section-padding-tab-land: 16rem 0;\r\n$section-padding-tab-land-top-big: 24rem 3.2rem 20.8rem 3.2rem;\r\n$section-padding-tab-land-btm-sm: 16rem 0 11.2rem 0;\r\n$section-padding-tab-land-sm: 11.2rem 0;\r\n\r\n/* ************* TABLET PORTRAIT *************** */\r\n$section-padding-tab-port: 12.8rem 2.4rem;\r\n$section-padding-tab-port-sm: 9.6rem 2.4rem;\r\n$section-padding-tab-port-t-big: 17.6rem 2.4rem 9.6rem 2.4rem;\r\n$section-padding-tab-port-tb-big: 17.6rem 2.4rem 14.4rem 2.4rem;\r\n\r\n/* ************* PHONE *************** */\r\n$section-padding-phone: 8rem 1.6rem;\r\n$section-padding-phone-tb-big: 14.4rem 1.6rem 9.6rem 1.6rem;\r\n","/* A cross-browser reset, often referred to as a CSS reset or a CSS normalization, is a technique used to reset or normalize default browser styling to create a consistent starting point for styling elements across different web browsers.\r\n\r\nDifferent browsers have their default styles for various HTML elements. This can lead to inconsistencies in appearance and layout between browsers. A CSS reset aims to neutralize these default styles, removing browser-specific styling differences, and providing a consistent baseline styling for your webpage across different browsers. */\r\n\r\n// Reset margins and paddings for all elements, including pseudo elements by setting margin, padding and box sizing in the universal selector.\r\n*,\r\n*::before,\r\n*::after {\r\n  // Each html element has default margin and padding. We want to provide consistency across all browsers so we set their value to 0.\r\n  margin: 0;\r\n  padding: 0;\r\n  // We want every element on our website to inherit the border-box value from the body element. Overall, it is a better practice than just setting the border-box value in the universal selector.\r\n  box-sizing: inherit;\r\n}\r\n\r\nhtml {\r\n  // The issue with setting the font-size to pixels is that it overwrites the font size set by the user in the browser settings. This is especially true for visually impaired people - they change the browser's default font size to a bigger one. By declaring it in pixels, we remove the ability for these people to view our website properly.\r\n  font-size: 10px;\r\n  // The default size of the web browser is 16px. We want to have a default root font size set to 10px. In order to make it possible for the visually impaired people to apply their font size setting, we have to use percentage value as this allows those people to scale font size to their size, unlike setting the font size to the fixed 10px value.\r\n  // Here we define what 1 rem unit is. 62.5% of 16px is 10px.\r\n  font-size: 62.5%;\r\n\r\n  // Desktop-first media query order\r\n\r\n  @include respond-to(big-dt) {\r\n    // width > 1800px?\r\n    font-size: 75%; // (12px / 16px) * 100%  = 75%\r\n  }\r\n  @include respond-to(tab-land) {\r\n    // width < 1200px?\r\n    font-size: 56.25%; // (9px / 16px) * 100%  = 56.25%\r\n  }\r\n  @include respond-to(tab-port) {\r\n    // width < 900px?\r\n    font-size: 50%; // (8px / 16px) * 100%  = 50%\r\n  }\r\n}\r\n\r\n// When it comes to fonts, we want to default their settings in the body element as it gives us a powerful inheritance property.\r\n\r\nbody {\r\n  padding: 3rem;\r\n  box-sizing: border-box; // Optional: Include border and padding in the element's total width and height\r\n  @include respond-to(tab-port-big) {\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n::selection {\r\n  background-color: $color-primary;\r\n  color: $color-white;\r\n}\r\n","@keyframes MoveInLeft {\r\n  // Start of the animation\r\n  0% {\r\n    opacity: 0;\r\n    // We want the header to fade in from the left\r\n    transform: translateX(-10rem);\r\n  }\r\n\r\n  80% {\r\n    transform: translateX(1rem);\r\n  }\r\n\r\n  // Finish of the animation\r\n  100% {\r\n    opacity: 1;\r\n    // And we want it to stop at its current position (-50% on the element's X axis)\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n@keyframes MoveInRight {\r\n  // Start of the animation\r\n  0% {\r\n    opacity: 0;\r\n    // We want the header to fade in from the right\r\n    transform: translateX(10rem);\r\n  }\r\n\r\n  /* 60% {\r\n    transform:rotate(-20deg)\r\n  } */\r\n\r\n  80% {\r\n    transform: translateX(-1rem);\r\n  }\r\n\r\n  // Finish of the animation\r\n  100% {\r\n    opacity: 1;\r\n    // And we want it to stop at its current position (-50% on the element's X axis)\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n@keyframes enlarge {\r\n  0% {\r\n    transform: scale(1); // Initial scale\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.2); // Scale to 120%\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1); // Back to initial scale\r\n  }\r\n}\r\n\r\n@keyframes MoveInButton {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(10rem);\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n","body {\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 400;\r\n  // font-size: 16px;\r\n  // 1.7 Line height means that the line height is 1.7x times bigger than the default value.\r\n  // font-size: 1.6rem;\r\n  line-height: 1.7;\r\n  color: $color-grey-dark;\r\n}\r\n\r\n.heading-primary {\r\n  color: $color-white;\r\n  text-transform: uppercase;\r\n  // To stop web browsers from moving the html element to the top at the end of the animation (shaking issue) we need to use the backface-visibility property and set its value to hidde\r\n  backface-visibility: hidden;\r\n  margin-bottom: 6.4rem;\r\n\r\n  &--main {\r\n    display: block;\r\n    font-size: 6.2rem;\r\n    letter-spacing: 3.6rem;\r\n    font-weight: 400;\r\n\r\n    animation-name: MoveInLeft;\r\n    animation-duration: 1s;\r\n    // animation-delay: 3s;\r\n    // animation-iteration-count: 3;\r\n    animation-timing-function: ease-out;\r\n    @include respond-to(phone-big) {\r\n      font-size: 5.2rem;\r\n      letter-spacing: 1.75rem;\r\n    }\r\n    @include respond-to(phone-med) {\r\n      font-size: 4.4rem;\r\n      letter-spacing: 1.5rem;\r\n    }\r\n  }\r\n\r\n  &--sub {\r\n    display: block;\r\n    font-size: 2rem;\r\n    letter-spacing: 1.75rem;\r\n    font-weight: 700;\r\n\r\n    // Let's use a CSS property, which contain all the necessary animation properties to shorten our code.\r\n    animation: MoveInRight 1s ease-out;\r\n    @include respond-to(phone-big) {\r\n      font-size: 1.8rem;\r\n      letter-spacing: 1rem;\r\n    }\r\n    @include respond-to(phone-med) {\r\n      font-size: 1.6rem;\r\n      letter-spacing: 0.75rem;\r\n    }\r\n  }\r\n}\r\n\r\n.heading-secondary {\r\n  display: inline-block;\r\n  font-size: 3.6rem;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    $color-primary-light,\r\n    $color-primary-dark\r\n  );\r\n  // In case the property is not supported across all browsers, declaring it with a vendor-specific prefix may help, e.g., a -webkit- prefix indicates that this property is declared to support WebKit-based browsers like Chrome and Safari. In the case of Mozilla, it uses a -moz- prefix, whereas Edge and IE use -m-. Vendor prefixes allow developers to use new or experimental CSS features not broadly supported across web browsers.\r\n  -webkit-background-clip: text;\r\n  // The \"background-cip: text\" CSS declaration results in displaying background only behind the text. The property is declared for general use - it isn't browser-specific. The general CSS properties should always be declared after vendor-specific declarations. If it isn't supported, web browser switches to a vendor-specific CSS declaration.\r\n  background-clip: text;\r\n  color: transparent;\r\n  letter-spacing: 0.2rem;\r\n  transition: all 0.2s;\r\n\r\n  @include respond-to(tab-port-big) {\r\n    font-size: 3rem;\r\n    letter-spacing: 0.1rem;\r\n  }\r\n\r\n  @include respond-to(phone-big) {\r\n    font-size: 2.4rem;\r\n    letter-spacing: 0;\r\n  }\r\n\r\n  &:hover {\r\n    // skew() syntax - skew(ax, ay), clockwise\r\n    transform: skew(15deg, 2deg) scale(1.1);\r\n    // rgba() syntax\r\n    // rgba(red, green, blue, alpha)\r\n    // rgba(color/variable, alpha)\r\n    // alpha - opacity\r\n    text-shadow: 0.5rem 1rem 1rem rgba($color-black, 0.3);\r\n  }\r\n}\r\n\r\n.heading-tertiary {\r\n  font-size: $default-font-size;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n}\r\n\r\n.paragraph {\r\n  font-size: $default-font-size;\r\n  margin-bottom: 3rem;\r\n}\r\n","// We should only use the !important keyword with utility classes. Using it with utility classes is a legitimate reason.\r\n.u-center-text {\r\n  text-align: center !important;\r\n}\r\n\r\n.u-margin-bottom-small {\r\n  margin-bottom: 1.6rem !important;\r\n}\r\n\r\n.u-margin-bottom-medium {\r\n  margin-bottom: 4.8rem !important;\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    margin-bottom: 2.4rem !important;\r\n  }\r\n}\r\n\r\n.u-margin-bottom-big {\r\n  margin-bottom: 8rem !important;\r\n}\r\n\r\n.u-margin-bottom-extrabig {\r\n  margin-bottom: 9.6rem !important;\r\n}\r\n\r\n.u-mediaquery {\r\n  &-about {\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      max-width: 80% !important;\r\n    }\r\n  }\r\n\r\n  &-composition {\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      &:not(:last-child) {\r\n        margin-bottom: 8rem !important;\r\n      }\r\n      margin-bottom: 8rem;\r\n    }\r\n\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      &:not(:last-child) {\r\n        margin-bottom: 11.2rem !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  &-book {\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      max-width: 100% !important;\r\n    }\r\n  }\r\n\r\n  &-story {\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      max-width: 85% !important;\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      max-width: 90% !important;\r\n    }\r\n  }\r\n\r\n  &-featurebox {\r\n    // width < 500px\r\n    @include respond-to(phone-med) {\r\n      max-width: 80% !important;\r\n    }\r\n  }\r\n\r\n  &-card {\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      max-width: 80% !important;\r\n    }\r\n  }\r\n\r\n  &-footer {\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      max-width: 80% !important;\r\n    }\r\n  }\r\n\r\n  &__popup-center {\r\n    // width < 1449px\r\n    @include respond-to(popup) {\r\n      text-align: center;\r\n      display: block;\r\n    }\r\n    // width < 900px\r\n    @include respond-to(tab-port-big) {\r\n      text-align: start;\r\n    }\r\n  }\r\n}\r\n",".btn {\r\n  // The button element does not have the pseudo classes like :link and :visited. Therefore we have to add the \"&\" selector, to add all the styling to the .btn class as well.\r\n  &,\r\n  &:link,\r\n  &:visited {\r\n    font-size: $default-font-size;\r\n    padding: 1.6rem 4rem;\r\n    text-decoration: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 10rem;\r\n    text-transform: uppercase;\r\n    display: inline-block;\r\n    transition: all 0.2s ease;\r\n    position: relative;\r\n  }\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);\r\n\r\n    /* We want to see the advanced animation only if we hover over the button */\r\n    &::after {\r\n      transform: scaleX(1.4) scaleY(1.6);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  &:active {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    /* We want the pseudo element look exactly the same as the button. Therefore, we want to specify its properties like height and width to be the same. Therefore, we need to set their values to 100% (100% of the parent element). It works, because pseudo element is treated like a child element of the parent element (button).*/\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10rem;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  &--white {\r\n    background-color: $color-white;\r\n    color: $color-grey-dark;\r\n    /* We also want to specify the colour of the pseudo element to be white, but this needs to be applied to .btn--white class. */\r\n    &::after {\r\n      background-color: $color-white;\r\n    }\r\n  }\r\n  &--green {\r\n    background-color: $color-primary;\r\n    color: $color-white;\r\n    /* We also want to specify the colour of the pseudo element to be green, but this needs to be applied to .btn--green class. */\r\n    &::after {\r\n      background-color: $color-primary;\r\n    }\r\n  }\r\n\r\n  &--animated {\r\n    animation: MoveInButton 0.5s ease-out 0.75s;\r\n    /* animation fill mode set to backwards applies the 0% animation declaration to our button before the animation happens. Therefore, we don't have to explicitly apply these styles to the button which prevents confusion. */\r\n    animation-fill-mode: backwards;\r\n  }\r\n}\r\n\r\n.btn-text {\r\n  &:link,\r\n  &:visited {\r\n    font-size: $default-font-size;\r\n    text-decoration: none;\r\n    color: $color-primary;\r\n    border-bottom: 1px solid $color-primary;\r\n    padding: 3px;\r\n    display: inline-block;\r\n  }\r\n  &:hover {\r\n    background-color: $color-primary;\r\n    color: $color-white;\r\n    transform: translateY(-3px);\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);\r\n  }\r\n  &:active {\r\n    transform: translateY(0px);\r\n    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);\r\n  }\r\n}\r\n",".composition {\r\n  position: relative;\r\n\r\n  // width < 900px\r\n  @include respond-to(tab-port-big) {\r\n    margin: 0 auto;\r\n    width: 90%;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  &__photo {\r\n    width: 55%;\r\n    box-shadow: 0 1.6rem 4rem rgba($color-black, 0.4);\r\n    border-radius: $br-normal;\r\n    position: absolute;\r\n    transition: all 0.2s;\r\n    z-index: 10;\r\n\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      float: left;\r\n      position: relative;\r\n      display: inline-block;\r\n      width: calc(100% / 3);\r\n      height: auto;\r\n      vertical-align: top;\r\n    }\r\n    // width < 700px\r\n    @include respond-to(tab-port-sm) {\r\n      width: 40%;\r\n    }\r\n    // width < 500px\r\n    @include respond-to(phone-med) {\r\n      width: 65%;\r\n    }\r\n\r\n    &--p1 {\r\n      top: -2rem;\r\n      left: 0;\r\n\r\n      // width < 1000px\r\n      @include respond-to(tab-land-sm) {\r\n        left: 0;\r\n        top: 0;\r\n        transform: scale(1.2);\r\n      }\r\n\r\n      // width < 700px\r\n      @include respond-to(tab-port-sm) {\r\n        top: 0;\r\n        left: 3rem;\r\n        transform: scale(1.5);\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n    &--p2 {\r\n      left: 40%;\r\n      top: 2rem;\r\n\r\n      // width < 1000px\r\n      @include respond-to(tab-land-sm) {\r\n        top: -1rem;\r\n        left: 0;\r\n        transform: scale(1.2);\r\n        z-index: 20;\r\n      }\r\n\r\n      // width < 700px\r\n      @include respond-to(tab-port-sm) {\r\n        top: 2rem;\r\n        left: 8rem;\r\n        z-index: 10;\r\n        transform: scale(1.5);\r\n      }\r\n\r\n      // width < 500px\r\n      @include respond-to(phone-med) {\r\n        top: -5rem;\r\n        left: 11rem;\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n    &--p3 {\r\n      top: 12rem;\r\n      left: 16%;\r\n\r\n      // width < 1000px\r\n      @include respond-to(tab-land-sm) {\r\n        top: 1rem;\r\n        left: 0;\r\n        transform: scale(1.2);\r\n      }\r\n\r\n      // width < 700px\r\n      @include respond-to(tab-port-sm) {\r\n        top: -2rem;\r\n        left: -12%;\r\n        transform: scale(1.5);\r\n      }\r\n\r\n      // width < 500px\r\n      @include respond-to(phone-med) {\r\n        top: -5rem;\r\n        left: 2rem;\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n    &:hover {\r\n      z-index: 100;\r\n      transform: scale(1.05) translateY(-0.5rem);\r\n      box-shadow: 0 2.4rem 4rem rgba($color-black, 0.5);\r\n      outline: $color-primary solid 1.5rem;\r\n      outline-offset: 2rem;\r\n\r\n      // width < 1000px\r\n      @include respond-to(tab-land-sm) {\r\n        transform: scale(1.25) translateY(-0.5rem);\r\n      }\r\n      // width < 700px\r\n      @include respond-to(tab-port-sm) {\r\n        transform: scale(1.55) translateY(-0.5rem);\r\n        outline-offset: 1rem;\r\n      }\r\n      // width < 500px\r\n      @include respond-to(phone-med) {\r\n        transform: scale(1.25) translateY(-0.5rem);\r\n        outline: $color-primary solid 1rem;\r\n        outline-offset: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n  &:hover &__photo:not(:hover) {\r\n    transform: scale(0.95);\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      transform: scale(1.15);\r\n    }\r\n    // width < 700px\r\n    @include respond-to(tab-port-sm) {\r\n      transform: scale(1.45);\r\n    }\r\n    // width < 500px\r\n    @include respond-to(phone-med) {\r\n      transform: scale(1.15);\r\n    }\r\n  }\r\n}\r\n",".feature-box {\r\n  background-color: rgba($color-white, 0.8);\r\n  font-size: 1.4rem;\r\n  padding: 2.4rem;\r\n  border-radius: $br-normal;\r\n  box-shadow: 0 1.6rem 4rem rgba($color-black, 0.16);\r\n  transition: all 0.2s ease-out;\r\n  @include respond-to(tab-land) {\r\n    padding: 1.6rem;\r\n  }\r\n  @include respond-to(tab-port-big) {\r\n    padding: 1.2rem;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.04) translateY(-1.6rem);\r\n  }\r\n\r\n  &__icon {\r\n    font-size: 6.2rem;\r\n    background-image: linear-gradient(\r\n      to right,\r\n      $color-primary-light,\r\n      $color-primary-dark\r\n    );\r\n    -webkit-background-clip: text;\r\n    background-clip: text;\r\n    color: transparent;\r\n    @include respond-to(tab-port-med) {\r\n    }\r\n  }\r\n}\r\n","// FUNCTIONALITY\r\n.card {\r\n  perspective: 100rem;\r\n  position: relative;\r\n  // Because the position of each side of the card is set to absolute, the card height collapses, and we stop seeing the perspective declaration in animation. To mitigate the issue, the height property must also be set on the card side parent element. On floats, we can use the clearfix solution. Unfortunately, there is no such thing for absolutely positioned elements.\r\n  height: 52rem;\r\n\r\n  // We cannot use the overflow CSS property to get the same border-radius when the picture is applied to the card element. It works, but the flipping card animation breaks down. To make it working, we need to apply this property on the __side element.\r\n  // overflow: hidden;\r\n\r\n  &__side {\r\n    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);\r\n    transition: all 0.5s linear;\r\n    font-size: 3rem;\r\n    height: 52rem;\r\n    border-radius: $br-normal;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    // When the absolute positioning is applied to the element, it adjusts the width to the content. To fill the entire column, we need to set the width to 100%.\r\n    width: 100%;\r\n    // We need to declare the backface-visibility property of hidden value to stop seeing the back side of the card element when not hovered.\r\n    // Optional - For better browser support\r\n    -webkit-backface-visibility: hidden;\r\n    backface-visibility: hidden;\r\n    overflow: hidden;\r\n    &--front {\r\n      background-color: $color-white;\r\n    }\r\n\r\n    &--back {\r\n      // The content of the back side should be already flipped and go back to normal when we hover over the card.\r\n      transform: rotateY(-180deg);\r\n      &-1 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-secondary-light,\r\n          $color-secondary-dark\r\n        );\r\n      }\r\n      &-2 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-primary-light,\r\n          $color-primary-dark\r\n        );\r\n      }\r\n      &-3 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-tertiary-light,\r\n          $color-tertiary-dark\r\n        );\r\n      }\r\n    }\r\n  }\r\n  // If we chose &__side--front:hover, the transform property animation would wobble and act weird when hovering the cursor over the card element. To stop it, we want to apply the hover on the entire card element; therefore, we want to declare the animation on the .card:hover selector.\r\n  &:hover &__side--front {\r\n    transform: rotateY(180deg);\r\n  }\r\n  &:hover &__side--back {\r\n    // Once we hover over the card, the back side should reset to the initial state, which is 0 degrees, so the content of the back of the card isn't flipped.\r\n    transform: rotateY(0);\r\n  }\r\n\r\n  // FRONT SIDE STYLING\r\n\r\n  &__picture {\r\n    background-size: cover;\r\n    height: 23rem;\r\n    background-blend-mode: screen;\r\n    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);\r\n    clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);\r\n    &--1 {\r\n      background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-secondary-light,\r\n          $color-secondary-dark\r\n        ),\r\n        url(../../img/nat-5-1000.jpg);\r\n    }\r\n    &--2 {\r\n      background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-primary-light,\r\n          $color-primary-dark\r\n        ),\r\n        url(../../img/nat-6-1000.jpg);\r\n    }\r\n    &--3 {\r\n      background-image: linear-gradient(\r\n          to right bottom,\r\n          $color-tertiary-light,\r\n          $color-tertiary-dark\r\n        ),\r\n        url(../../img/nat-7-1000.jpg);\r\n    }\r\n  }\r\n\r\n  &__heading {\r\n    font-size: 3rem;\r\n    font-weight: 300;\r\n    text-align: right;\r\n    color: $color-white;\r\n    text-transform: uppercase;\r\n    position: absolute;\r\n    top: 12rem;\r\n    right: 2rem;\r\n    width: 75%;\r\n    &-span {\r\n      padding: 0.8rem;\r\n      -webkit-box-decoration-break: clone;\r\n      box-decoration-break: clone;\r\n      &--1 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          rgba($color-secondary-light, 0.85),\r\n          rgba($color-secondary-dark, 0.85)\r\n        );\r\n      }\r\n      &--2 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          rgba($color-primary-light, 0.85),\r\n          rgba($color-primary-dark, 0.85)\r\n        );\r\n      }\r\n      &--3 {\r\n        background-image: linear-gradient(\r\n          to right bottom,\r\n          rgba($color-tertiary-light, 0.85),\r\n          rgba($color-tertiary-dark, 0.85)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  &__details {\r\n    font-size: 1.6rem;\r\n    padding: 3.2rem;\r\n    text-align: center;\r\n    ul {\r\n      list-style: none;\r\n      max-width: 80%;\r\n      margin: auto;\r\n    }\r\n    li {\r\n      text-decoration: none;\r\n      padding: 0.8rem;\r\n\r\n      &:not(:last-child) {\r\n        border-bottom: 1px solid $color-grey-light-3;\r\n      }\r\n    }\r\n  }\r\n\r\n  // BACK SIDE STYLING\r\n  &__cta {\r\n    // To center the content vertically, we need to apply absolute positioning.\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 90%;\r\n    color: $color-white;\r\n    text-align: center;\r\n    &-only {\r\n      font-size: 1.4rem;\r\n      text-transform: uppercase;\r\n    }\r\n    &-value {\r\n      font-size: 6.2rem;\r\n      font-weight: 100;\r\n      margin-bottom: 8rem;\r\n    }\r\n  }\r\n  // width < 800px\r\n  @media only screen and (max-width: 50em), only screen and (hover: none) {\r\n    // We want the height to automatically adjust according to the content height contained within the card elements.\r\n    height: auto;\r\n    box-shadow: 0 1.6rem 4rem rgba($color-black, 0.2);\r\n    background-color: $color-white;\r\n\r\n    &__side {\r\n      // Each side of the card was set to the same fixed height as the card element. It has to be set to auto to adjust its height according to its content.\r\n      height: auto;\r\n      border-radius: $br-normal;\r\n      position: relative;\r\n      box-shadow: none;\r\n      &--back {\r\n        transform: rotateY(0);\r\n        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);\r\n      }\r\n    }\r\n\r\n    &:hover &__side--front {\r\n      transform: rotateY(0);\r\n    }\r\n\r\n    // BACK SIDE STYLING\r\n    &__cta {\r\n      box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);\r\n      top: 0;\r\n      left: 0;\r\n      transform: none;\r\n      position: relative;\r\n      color: $color-white;\r\n      width: 100%;\r\n      padding: 4.8rem 0 3.2rem 0;\r\n\r\n      &-only {\r\n        font-weight: 600;\r\n      }\r\n\r\n      &-value {\r\n        font-size: 4.4rem;\r\n        font-weight: 200;\r\n        margin-bottom: 2.4rem;\r\n      }\r\n    }\r\n  }\r\n  // width < 500px\r\n  @media only screen and (max-width: 31.25em), only screen and (hover: none) {\r\n    &__picture {\r\n      clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0 100%);\r\n    }\r\n\r\n    &__details {\r\n      padding: 1.6rem;\r\n      li {\r\n        padding: 0.4rem;\r\n      }\r\n    }\r\n\r\n    &__side {\r\n      &--back {\r\n        transform: rotateY(0);\r\n        clip-path: polygon(0 10%, 100% 0, 100% 100%, 0 100%);\r\n      }\r\n    }\r\n\r\n    &__cta {\r\n      padding: 2.4rem 0 1.6rem 0;\r\n      &-value {\r\n        margin-bottom: 1.6rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".story {\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  box-shadow: 0 3.2rem 6.4rem rgba($color-black, 0.1);\r\n  padding: 6.4rem;\r\n  border-radius: $br-normal;\r\n  background-color: rgba($color-white, 0.6);\r\n  font-size: $default-font-size;\r\n  padding-left: 9.6rem;\r\n  transform: skewX(-12deg);\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    width: 100%;\r\n    padding: 3.2rem 3.2rem 3.2rem 4.8rem;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    transform: skewX(0);\r\n  }\r\n\r\n  // As soon as we hover on the story element, we want the animation happen on the __caption element.\r\n  &:hover &__caption {\r\n    transform: translate(-50%, -50%);\r\n    opacity: 1;\r\n  }\r\n\r\n  & > * {\r\n    transform: skewX(12deg);\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      transform: skewX(0);\r\n    }\r\n  }\r\n\r\n  &__shape {\r\n    float: left;\r\n    width: 15.2rem;\r\n    height: 15.2rem;\r\n    // Stop the child element from going over the edges of the parent element if web-clip-path not supported.\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n\r\n    // The best way to create whitespace between the text and the floated element is to use the transform property with the translateX value.\r\n    // We can't apply two transform properties on the individual element. The following declaration block is a subsequent declaration block (there is a direct child selector above), therefore, it overrides the previous declaration of tranform property and the skewX property does not get applied to the element. To mitigate the issue, we need to explicitily declare the skewX value right after translateX value in the same declaration block.\r\n    transform: translateX(-3.2rem) skewX(12deg);\r\n    position: relative;\r\n\r\n    // If clip-path property is supported, then:\r\n    // The attribute values are irrelevant. It doesn't matter what we enter.\r\n    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\r\n      -webkit-shape-outside: circle(50% at 50% 50%);\r\n      // The CSS shape-outside property controls how text wraps around any floated image. It’s important to note that this property will only work on floated elements. You must set the height and width of the element.\r\n      shape-outside: circle(50% at 50% 50%);\r\n\r\n      //       clip-path: circle(50% at 50% 50%)\r\n      // Clips the element to a circular shape, controlling the shape and size of the visible part of the element.\r\n      //       Characteristics\r\n      // Shape: Can create more complex shapes beyond just circles, such as ellipses, polygons, or custom paths.\r\n      // Overflow: Clips the content within the specified shape, hiding anything outside the shape.\r\n      // Flexibility: More flexible and powerful for creating complex or custom shapes.\r\n      -webkit-clip-path: circle(50% at 50% 50%);\r\n      clip-path: circle(50% at 50% 50%);\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      transform: translateX(-3.2rem) skewX(0);\r\n    }\r\n\r\n    // width < 400px\r\n    @include respond-to(phone-sm) {\r\n      float: none;\r\n      left: 50%;\r\n      transform: translateX(-50%) skewX(0);\r\n      margin-bottom: 2.4rem;\r\n    }\r\n  }\r\n\r\n  &__img {\r\n    height: 100%;\r\n    transform: translateX(-4rem) scale(1.4);\r\n    backface-visibility: hidden;\r\n    transition: all 0.5s;\r\n\r\n    // width < 400px\r\n    @include respond-to(phone-sm) {\r\n      text-align: center;\r\n    }\r\n  }\r\n  &:hover &__img {\r\n    filter: blur(2px) brightness(0.8);\r\n    transform: translateX(-4rem) scale(1);\r\n  }\r\n\r\n  &__caption {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    color: $color-white;\r\n    z-index: 100;\r\n    transform: translate(-50%, 20%);\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    opacity: 0;\r\n    // The animation has to be explicitly declared in the element affected by the animation. If declared on a parent element, it will not work. The transition property does not get inherited.\r\n    transition: all 0.5s;\r\n    // In animations where elements are rotated or transformed using transform: translate(), sometimes glitches or flickering can occur, especially when the element is rotated and then translated. This can happen because browsers render the element and its back face separately, and in some cases, the back face might become visible during the animation, leading to visual artifacts. By setting backface-visibility: hidden, you're essentially telling the browser not to render the back face of the element during the animation. This can help eliminate the glitch or flickering effect, as the browser won't render the back face, preventing any visual artifacts from appearing during the animation\r\n    backface-visibility: hidden;\r\n  }\r\n}\r\n",".bg-video {\r\n  position: absolute;\r\n  top: 0%;\r\n  left: 0%;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: -1;\r\n  opacity: 0.15;\r\n\r\n  &__content {\r\n    height: 100%;\r\n    width: 100%;\r\n    // Object-fit property works like the background-image property for images if we set its value to cover. The object-fit: cover CSS rule is used to specify how an element (typically an <img> or <video>) should be resized and fitted inside its container while maintaining its aspect ratio.\r\n    object-fit: cover;\r\n  }\r\n}\r\n",".form {\r\n  &__group {\r\n    margin-bottom: 1.2rem;\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      margin-bottom: 0;\r\n      width: 70%;\r\n    }\r\n    // width < 700px\r\n    @include respond-to(tab-port-sm) {\r\n      width: 80%;\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      width: 100%;\r\n    }\r\n  }\r\n  &__input {\r\n    border-style: none;\r\n    height: 3.2rem;\r\n    width: 90%;\r\n    padding: 2.4rem 1.6rem;\r\n    font-family: inherit;\r\n    font-size: 1.6rem;\r\n    color: inherit;\r\n    // Make the animation of the bottom border colour change\r\n    transition: all 0.3s;\r\n    // To make the bottom border animation smooth when we select the input field, we've got to declare it first with a transparent colour.\r\n    border-bottom: 3px solid transparent;\r\n    // Styling the placeholder text\r\n    &::-webkit-input-placeholder,\r\n    &::placeholder {\r\n      color: $color-grey-light-2;\r\n    }\r\n    // Styling the input field when is active\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 1rem 2rem rgba($color-black, 0.15);\r\n      // Apply an orange bottom border if the input is invalid\r\n      &:invalid {\r\n        border-bottom: 3px solid $color-secondary-dark;\r\n      }\r\n      // Apply a green bottom border if the input is valid\r\n      &:valid {\r\n        border-bottom: 3px solid $color-primary;\r\n      }\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      height: 2.4rem;\r\n      padding: 1.6rem 1.2rem;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  // If the placeholder disappears (once text is typed) it applies styling to the label element. The adjacent sibling selector, represented by the + symbol in CSS selectors, is used to select an element that comes immediately after another specific element, and they share the same parent.\r\n  &__input:placeholder-shown + &__label {\r\n    transform: translateY(-4rem);\r\n    // The visibility property cannot be animated.\r\n    visibility: hidden;\r\n    // Opacity can be animated\r\n    opacity: 0;\r\n  }\r\n\r\n  &__label {\r\n    // 0.8 rem top/bottom, 1.6rem left/right. Aligns the label's position with the input placeholder.\r\n    padding: 0.8rem 1.6rem;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    letter-spacing: 1.2px;\r\n    transition: all 0.3s;\r\n    // Label elements are inline elements by default. It renders the element on the same line within their containing block, placing them next to each other horizontally.\r\n    display: inline-block;\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      padding: 0.4rem 0.2rem;\r\n    }\r\n  }\r\n\r\n  &__radio {\r\n    &-group {\r\n      // The default value of display property of radio buttons is \"block\". We want them to be situated next to each other and style their height and width. Therefore, we need to set the display property value to an \"inline-block\" value.\r\n      display: inline-block;\r\n      // Align radio buttons in the same line.\r\n      width: 49%;\r\n      // width < 800px\r\n      @include respond-to(tab-port-med) {\r\n        display: block;\r\n        width: auto;\r\n        &:not(:last-child) {\r\n          margin-bottom: 0.8rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create custom radio button appearance\r\n    &-input {\r\n      // Hide default radio button appearance\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      width: 2.4rem;\r\n      height: 2.4rem;\r\n      background-color: transparent;\r\n      // Create radio button outline\r\n      border: 3px solid $color-primary;\r\n      // Make the radio button round\r\n      border-radius: 50%;\r\n      // position: relative;\r\n      margin-right: 1.2rem;\r\n\r\n      // Style radio button check mark\r\n      &::before {\r\n        content: \"\";\r\n        // The default value of the \"display\" property of pseudo-elements is the \"inline\" value. Therefore, the width and height properties won't apply to the element.\r\n        display: block;\r\n        width: 75%;\r\n        height: 75%;\r\n        background-color: $color-primary;\r\n        border-radius: 50%;\r\n        // The default value of the \"position\" property of pseudo-elements is the \"static\" value. To center our check mark, we have to set the position property value to either a relative or absolute value. When using absolute value, remember to specify the parent's element position property. It can be any value. As long as the position property is specified, the absolute positioning works.\r\n        position: relative;\r\n        // Because the middle of the element (point 0 on the X and Y axes) is positioned at the upper left corner of the radio element, we need to move it to the centre.\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        // No check mark in initial state\r\n        opacity: 0;\r\n        // Animate the check mark\r\n        transition: all 0.4s;\r\n      }\r\n\r\n      // Style checked state of the custom radio button\r\n      &:checked::before {\r\n        // Show a check mark when the radio button is clicked\r\n        opacity: 1;\r\n      }\r\n    }\r\n    //Style font of the radio button labels\r\n    &-label {\r\n      font-size: $default-font-size;\r\n      color: $color-grey-dark;\r\n    }\r\n\r\n    &-input,\r\n    &-label {\r\n      cursor: pointer;\r\n      // Align rendering of radio buttons and their labels\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n}\r\n","// ========= Closed State ========= //\r\n\r\n// Popup background styling\r\n.popup {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  // Occupy the whole view of the page\r\n  height: 100vh;\r\n  width: 100%;\r\n  z-index: 3000;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n\r\n  // The @supports query checks if the browser supports either -webkit-backdrop-filter or backdrop-filter.\r\n  // If either of these properties is supported, the styles inside the @supports block will be applied.\r\n  @supports (-webkit-backdrop-filter: blur(5px)) or (backdrop-filter: blur(5px)) {\r\n    // Inside the @supports block, both the prefixed and standard versions of backdrop-filter are included. This ensures compatibility with browsers that support either version.\r\n\r\n    // Optional - For better browser support\r\n    -webkit-backdrop-filter: blur(5px);\r\n    // Blurring background\r\n    backdrop-filter: blur(5px);\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  // Set to hidden, when the popup is closed\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n\r\n  // Main content window styling\r\n  &__content {\r\n    border-radius: 3px;\r\n    background-color: $color-white;\r\n    @include absolute_positioning_center;\r\n    width: 75%;\r\n    display: table;\r\n    // Hide corners of the image when border-radius is applied\r\n    overflow: hidden;\r\n    opacity: 0;\r\n    // Scale set to a lower value to make the element look like it emerges towards the user when the popup is opened.\r\n    transform: translate(-50%, -50%) scale(0);\r\n    // Delay set to allow black background to emerge first.\r\n    transition: all 0.5s 0.2s;\r\n\r\n    // width < 700px\r\n    @include respond-to(tab-port-sm) {\r\n      width: 90%;\r\n    }\r\n    // Styling the left-side width of the popup content\r\n    &-left {\r\n      display: table-cell;\r\n      width: calc(100% / 3);\r\n\r\n      @include respond-to(popup) {\r\n        display: none;\r\n      }\r\n    }\r\n    // Styling the right-side width of the popup content\r\n    &-right {\r\n      display: table-cell;\r\n      width: calc((100% / 3) * 2);\r\n      vertical-align: middle;\r\n      padding: 2.4rem 4rem;\r\n    }\r\n    @include respond-to(popup) {\r\n      background-image: linear-gradient(rgba($color-white, 0.95) 0% 100%),\r\n        url(../../img/nat-1-1500.jpg);\r\n    }\r\n  }\r\n\r\n  &__img {\r\n    width: 100%;\r\n    display: block;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 0.8rem;\r\n    }\r\n  }\r\n\r\n  &__text {\r\n    font-size: 1.4rem;\r\n    column-count: 2;\r\n    column-gap: 4rem;\r\n    column-rule: 1px solid $color-grey-light-2;\r\n    -moz-hyphens: auto;\r\n    -ms-hyphens: auto;\r\n    -webkit-hyphens: auto;\r\n    hyphens: auto;\r\n    text-align: justify;\r\n\r\n    // width < 900px\r\n    @include respond-to(tab-port-big) {\r\n      column-count: 1;\r\n      hyphens: none;\r\n    }\r\n  }\r\n\r\n  // CTA button styling\r\n  &__button {\r\n    text-align: center;\r\n  }\r\n\r\n  // ========= Opened state ========= //\r\n\r\n  // Making the popup visible by using the :target pseudo class.\r\n  // It targets an HTML ID. When an anchor element targeting a specific ID is clicked, it targets the ID and applies all declared styling to the targeted element (including its children if there are any).\r\n\r\n  &:target {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n\r\n  // Animation of the popup content (resizing the element)\r\n  &:target &__content {\r\n    transform: translate(-50%, -50%) scale(1);\r\n    opacity: 1;\r\n  }\r\n\r\n  // Styling of the close button\r\n  &__close {\r\n    position: fixed;\r\n    top: 2.4rem;\r\n    right: 2.4rem;\r\n    width: 2.4rem;\r\n    height: 2.4rem;\r\n    border-radius: 50%;\r\n    transition: all 0.2s;\r\n    &-btn:link,\r\n    &-btn:visited {\r\n      line-height: 0;\r\n      color: $color-grey-dark;\r\n      @include absolute_positioning_center;\r\n      display: inline-block;\r\n      font-size: 3rem;\r\n      @include respond-to(tab-port-big) {\r\n        font-size: 4.4rem;\r\n      }\r\n      text-decoration: none;\r\n      &:hover,\r\n      &:active {\r\n        color: $color-white;\r\n      }\r\n\r\n      // width < 900px\r\n      @include respond-to(tab-port-big) {\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      background-color: $color-primary;\r\n      transform: translateY(-1px);\r\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);\r\n    }\r\n    &:active {\r\n      transform: translateY(1px);\r\n      box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.5);\r\n    }\r\n  }\r\n}\r\n",".section-about {\r\n  background-color: $color-grey-light-1;\r\n  padding: $section-padding-big;\r\n  margin-top: -20vh;\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    padding: $section-padding-tab-land-top-big;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port-tb-big;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: $section-padding-phone-tb-big;\r\n  }\r\n}\r\n\r\n.section-features {\r\n  padding: $section-padding-normal;\r\n  background-image: linear-gradient(\r\n      to right bottom,\r\n      rgba($color-primary-light, 0.8),\r\n      rgba($color-primary-dark, 0.8)\r\n    ),\r\n    url(../../img/nat-4-1000.jpg);\r\n  background-size: cover;\r\n  transform: skewY(-5deg);\r\n  margin-top: -7rem;\r\n\r\n  // To remove the skew from children elements we will use the direct child selector. We could remove the skew effect explicitly from feauture boxes, but imagine what happens when we add new content to our features section. We would have to remove this effect from the new content as well. Instead, we can select all direct children elements found in the section-features element, avoiding the hassle of removing the skew effect explicitly in all child elements.\r\n\r\n  // What is a direct child element? It is a child element directly adjacent to its parent element.\r\n  & > * {\r\n    // CSS syntax\r\n    // .section-features > *\r\n    transform: skewY(5deg);\r\n  }\r\n\r\n  // If we used the \"& *\" selector to select all child elements, not only direct ones, then each subsequent deeper nested element will be rotated by another extra 5 degrees relatively to its parent element. So if you have a lot of nesting, each subsequent node will be skewed by 5 degrees more in relation to its adjacent parent element.Therefore, for instance, if you have 4 subsequent nested nodes, the last child element will be skewed by 20 degrees (4 times 5 is 20).\r\n\r\n  // & * {\r\n  //   // CSS syntax\r\n  //   // .section-features > *\r\n  //   transform: skewY(5deg);\r\n  // }\r\n\r\n  // Load 1000px wide image\r\n  @include resolution-media-1000 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/nat-4-1000.jpg);\r\n  }\r\n  // Load 1500px wide image\r\n  @include resolution-media-1500 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/nat-4-1500.jpg);\r\n  }\r\n\r\n  // Load 2000px wide image\r\n  @include resolution-media-2000 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/nat-4-2000.jpg);\r\n  }\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    padding: $section-padding-tab-land;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: $section-padding-phone;\r\n  }\r\n}\r\n\r\n.section-tours {\r\n  background-color: $color-grey-light-1;\r\n  padding: $section-padding-btm-sm;\r\n  margin-top: -7rem;\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    padding: $section-padding-tab-land-btm-sm;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port-t-big;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: $section-padding-phone-tb-big;\r\n  }\r\n}\r\n\r\n.section-stories {\r\n  padding: $section-padding-small;\r\n  position: relative;\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    padding: $section-padding-tab-land-sm;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port-sm;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: $section-padding-phone;\r\n  }\r\n}\r\n\r\n// Booking section general styling\r\n.section-book {\r\n  background-image: linear-gradient(\r\n    to right bottom,\r\n    $color-primary-light,\r\n    $color-primary-dark\r\n  );\r\n  padding: $section-padding-normal;\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    padding: $section-padding-tab-land-sm;\r\n  }\r\n\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port-sm;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: 8rem;\r\n  }\r\n\r\n  // width < 500px\r\n  @include respond-to(phone-med) {\r\n    padding: 4.8rem;\r\n  }\r\n  // width < 400px\r\n  @include respond-to(phone-sm) {\r\n    padding: 6.4rem 3.2rem;\r\n  }\r\n}\r\n\r\n// Booking form layout\r\n.book {\r\n  background-image: linear-gradient(\r\n      105deg,\r\n      rgba($color-white, 0.9) 0% 50%,\r\n      transparent 50%\r\n    ),\r\n    url(../../img/nat-10-1000.jpg);\r\n  background-size: cover;\r\n  border-radius: $br-normal;\r\n  box-shadow: 0 1.6rem 4rem rgba($color-black, 0.15);\r\n  // Load 1000px wide image\r\n  @include resolution-media-1000 {\r\n    background-image: linear-gradient(\r\n        105deg,\r\n        rgba($color-white, 0.9) 0% 50%,\r\n        transparent 50%\r\n      ),\r\n      url(../../img/nat-10-1000.jpg);\r\n  }\r\n\r\n  // Load 1500px wide image\r\n  @include resolution-media-1500 {\r\n    background-image: linear-gradient(\r\n        105deg,\r\n        rgba($color-white, 0.9) 0% 50%,\r\n        transparent 50%\r\n      ),\r\n      url(../../img/nat-10-1500.jpg);\r\n  }\r\n  // Load 2000px wide image\r\n  @include resolution-media-2000 {\r\n    background-image: linear-gradient(\r\n        105deg,\r\n        rgba($color-white, 0.9) 0% 50%,\r\n        transparent 50%\r\n      ),\r\n      url(../../img/nat-10-2000.jpg);\r\n  }\r\n\r\n  // width < 700px\r\n  @include respond-to(tab-port-sm) {\r\n    // Load 1000px wide image\r\n    @include resolution-media-1000 {\r\n      background-image: linear-gradient(\r\n          105deg,\r\n          rgba($color-white, 0.9) 0% 60%,\r\n          transparent 60%\r\n        ),\r\n        url(../../img/nat-10-1000.jpg);\r\n    }\r\n    // Load 1500px wide image\r\n    @include resolution-media-1500 {\r\n      background-image: linear-gradient(\r\n          105deg,\r\n          rgba($color-white, 0.9) 0% 60%,\r\n          transparent 60%\r\n        ),\r\n        url(../../img/nat-10-1500.jpg);\r\n    }\r\n    // Load 2000px wide image\r\n    @include resolution-media-2000 {\r\n      background-image: linear-gradient(\r\n          105deg,\r\n          rgba($color-white, 0.9) 0% 60%,\r\n          transparent 60%\r\n        ),\r\n        url(../../img/nat-10-2000.jpg);\r\n    }\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    background-image: linear-gradient(\r\n      105deg,\r\n      rgba($color-white, 0.9) 0% 100%,\r\n      transparent 100%\r\n    );\r\n  }\r\n\r\n  &__form {\r\n    width: 50%;\r\n    padding: 4.8rem;\r\n\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      padding: 4rem;\r\n      width: 70%;\r\n    }\r\n\r\n    // width < 700px\r\n    @include respond-to(tab-port-sm) {\r\n      padding: 3.2rem;\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      width: auto;\r\n      padding: 7.2rem;\r\n    }\r\n\r\n    // width < 500px\r\n    @include respond-to(phone-med) {\r\n      width: auto;\r\n      padding: 3.2rem;\r\n    }\r\n  }\r\n}\r\n",".header {\r\n  // This property sets the height of the HTML element to 95% of the current viewport. Monitors vary in size, so this property resizes the elements based on the maximum height of the view port.\r\n  height: 85vh;\r\n  // Default image\r\n  background-image: linear-gradient(\r\n      to right bottom,\r\n      rgba($color-primary-light, 0.8),\r\n      rgba($color-primary-dark, 0.8)\r\n    ),\r\n    url(../../img/hero-1000.jpg);\r\n  // Set the image to cover the whole width of the viewport\r\n  background-size: cover;\r\n  // Setting up the image position to top makes it stay at the the middle part of the screen when we use a device with a different viewport size.\r\n  background-position: top;\r\n  // syntax: (x y(first point), x y (2nd point), x y (3rd point), x y (4th point)\r\n\r\n  // clip-path: polygon(0% 100%, 50% 0, 100% 100%);\r\n\r\n  // If clip-path property is supported, then:\r\n  // The attribute values are irrelevant. It doesn't matter what we enter.\r\n  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\r\n    height: 95vh;\r\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 95%);\r\n    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 95%);\r\n  }\r\n\r\n  /* Load hero-1000.jpg image */\r\n  @include resolution-media-1000 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/hero-1000.jpg);\r\n  }\r\n  /* Load hero-1500.jpg image */\r\n  @include resolution-media-1500 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/hero-1500.jpg);\r\n  }\r\n\r\n  /* Load hero-2000.jpg image */\r\n  @include resolution-media-2000 {\r\n    background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba($color-primary-light, 0.8),\r\n        rgba($color-primary-dark, 0.8)\r\n      ),\r\n      url(../../img/hero-2000.jpg);\r\n  }\r\n\r\n  // width < 1200px\r\n  @include respond-to(tab-land) {\r\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 90%);\r\n    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 90%);\r\n  }\r\n\r\n  &__logo-box {\r\n    position: absolute;\r\n    top: 4rem;\r\n    left: 4rem;\r\n\r\n    // width < 900px\r\n    @include respond-to(tab-port-big) {\r\n      top: 6.4rem;\r\n      left: 6.4rem;\r\n      // transform: translate(-50%, -50%);\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      top: 4rem;\r\n      left: 4rem;\r\n    }\r\n  }\r\n  &__logo {\r\n    // We don't need to specify the width property. Browsers will figure it out.\r\n    height: 4rem;\r\n    backface-visibility: hidden;\r\n    // Apply animation on hover\r\n    &:hover {\r\n      animation: enlarge 1s ease-in-out;\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      height: 4.8rem;\r\n    }\r\n  }\r\n\r\n  &__text-box {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    // Anchor tags - \"a\" elements are treated as text. Therefore, setting the text-align property works.\r\n    text-align: center;\r\n  }\r\n}\r\n",".row {\r\n  max-width: $grid-width;\r\n  margin: 0 auto;\r\n\r\n  // The :not(selector) pseudo class selects all elements that do not match the specified selector. You can select multiple elements within the :not() pseudo-class separated by comma. These can be html elements, classes or IDs.\r\n  &:not(:last-child) {\r\n    margin-bottom: $gutter-vertical;\r\n  }\r\n  @include clearfix;\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    max-width: 55%;\r\n  }\r\n}\r\n\r\n// The below code is an attribute selector. It targets markup elements based on what the provide inside the quotation marks. The ^ (caret) symbol tells the selector to target all instances. In our case, we want to target all classes that start with the \"col-\". We could use the asterix symbol * to target every selector containing the \"col-\" content. The $ symbol means to target all selectors that end with the \"col-\".\r\n[class^=\"col-\"] {\r\n  float: left;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: $gutter-horizontal-big;\r\n\r\n    // width < 1100px\r\n    @include respond-to(tab-land-med) {\r\n      margin-right: $gutter-horizontal-normal;\r\n    }\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      margin-right: $gutter-horizontal-small;\r\n    }\r\n    // width < 800px\r\n    @include respond-to(tab-port-med) {\r\n      margin-right: 0;\r\n      margin-bottom: 4.8rem;\r\n    }\r\n  }\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    width: 100% !important;\r\n  }\r\n}\r\n\r\n.col-1-of-2 {\r\n  // calc() in SASS is much more powerful than in CSS as we can mix various units. In CSS we can only use 1 particular unit to perform calculations.\r\n  // width: calc((100% - $gutter-horizontal-big) / 2);\r\n  @include column-width($gutter-horizontal-big, 2, 1);\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 2, 1);\r\n  }\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.col-1-of-3 {\r\n  @include column-width($gutter-horizontal-big, 3, 1);\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 3, 1);\r\n  }\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    @include column-width($gutter-horizontal-small, 3, 1);\r\n  }\r\n}\r\n\r\n.col-1-of-4 {\r\n  @include column-width($gutter-horizontal-big, 4, 1);\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 4, 1);\r\n  }\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    @include column-width($gutter-horizontal-small, 4, 1);\r\n  }\r\n}\r\n\r\n.col-2-of-3 {\r\n  @include column-width($gutter-horizontal-big, 3, 2);\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 3, 2);\r\n  }\r\n\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    @include column-width($gutter-horizontal-small, 3, 2);\r\n  }\r\n}\r\n\r\n.col-2-of-4 {\r\n  @include column-width($gutter-horizontal-big, 4, 2);\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 4, 2);\r\n  }\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    @include column-width($gutter-horizontal-small, 4, 2);\r\n  }\r\n}\r\n\r\n.col-3-of-4 {\r\n  @include column-width($gutter-horizontal-big, 4, 3);\r\n\r\n  // width < 1100px\r\n  @include respond-to(tab-land-med) {\r\n    @include column-width($gutter-horizontal-normal, 4, 3);\r\n  }\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    @include column-width($gutter-horizontal-small, 4, 3);\r\n  }\r\n}\r\n","footer {\r\n  background-color: #333333;\r\n  padding: $section-padding-small;\r\n  color: $color-grey-light-1;\r\n  font-size: 1.4rem;\r\n  // width < 1000px\r\n  @include respond-to(tab-land-sm) {\r\n    padding: $section-padding-tab-land-sm;\r\n  }\r\n  // width < 800px\r\n  @include respond-to(tab-port-med) {\r\n    padding: $section-padding-tab-port-sm;\r\n  }\r\n\r\n  // width < 600px\r\n  @include respond-to(phone-big) {\r\n    padding: $section-padding-phone;\r\n  }\r\n}\r\n\r\n.footer {\r\n  &__logo {\r\n    width: 15rem;\r\n    height: auto;\r\n\r\n    &-box {\r\n      text-align: center;\r\n      margin-bottom: 6.4rem;\r\n      // width < 800px\r\n      @include respond-to(tab-port-med) {\r\n        margin-bottom: 3.2rem;\r\n      }\r\n    }\r\n  }\r\n  &__navigation,\r\n  &__copyright {\r\n    display: inline-block;\r\n    width: 84.5%;\r\n    padding-top: 1.6rem;\r\n    border-top: 1px solid $color-grey-dark;\r\n    @include respond-to(tab-land-sm) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  &__navigation {\r\n    text-align: center;\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      margin-bottom: 6.4rem;\r\n    }\r\n    @include respond-to($section-padding-tab-port) {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  &__copyright {\r\n    float: right;\r\n    // width < 1000px\r\n    @include respond-to(tab-land-sm) {\r\n      float: none;\r\n    }\r\n  }\r\n\r\n  &__list {\r\n    list-style: none;\r\n  }\r\n  &__item {\r\n    display: inline-block;\r\n    &:not(:last-child) {\r\n      margin-right: 1.6rem;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    &,\r\n    &:link,\r\n    &:visited {\r\n      display: inline-block;\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      color: $color-grey-light-1;\r\n      transition: all 0.2s;\r\n\r\n      &:hover,\r\n      &:active {\r\n        color: $color-primary;\r\n        transform: rotate(5deg) scale(1.3);\r\n        box-shadow: 0 0.5rem 1.5rem 0.3rem rgba($color-black, 0.3);\r\n        background-color: $color-grey-dark-2;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".navigation {\r\n  // Default checkbox styling removal\r\n  &__checkbox {\r\n    display: none;\r\n    appearance: none;\r\n  }\r\n\r\n  // Styling of the hamburger icon appearance\r\n  &__icon {\r\n    position: relative;\r\n    // Position the text element (&nbsp) at 50% from the top edge of the parent element (__button)\r\n    top: 50%;\r\n    &,\r\n    &::before,\r\n    &::after {\r\n      // Styling of the hamburger icon lines\r\n      display: inline-block;\r\n      height: 1.5px;\r\n      width: 3.2rem;\r\n      background-color: $color-grey-dark-2;\r\n    }\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      transition: all 0.3s;\r\n      left: 0;\r\n    }\r\n    &::before {\r\n      // The % unit would correspond to the height of the relatively positioned element. In this case, it is best to use px/rem units.\r\n      top: -0.8rem;\r\n    }\r\n    &::after {\r\n      top: 0.8rem;\r\n    }\r\n  }\r\n\r\n  // Styling the hamburger icon animation on hover\r\n  &__button:hover &__icon {\r\n    &::before {\r\n      transform: scaleY(1.5) translateY(-0.1rem);\r\n    }\r\n    &::after {\r\n      transform: scaleY(1.5) translateY(0.1rem);\r\n    }\r\n  }\r\n\r\n  // Styling the hamburger icon animation on active\r\n  &__checkbox:checked + &__button &__icon {\r\n    background-color: transparent;\r\n    &::before {\r\n      top: 0;\r\n      transform: rotate(135deg);\r\n    }\r\n    &::after {\r\n      top: 0;\r\n      transform: rotate(-135deg);\r\n    }\r\n  }\r\n\r\n  // Styling hamburger button & subsurface background shape & positioning\r\n  &__button,\r\n  &__background {\r\n    display: inline-block;\r\n    border-radius: 50%;\r\n    position: fixed;\r\n  }\r\n\r\n  // hamburger button background styling\r\n  &__button {\r\n    width: 6.4rem;\r\n    height: 6.4rem;\r\n    top: 6.4rem;\r\n    right: 6.4rem;\r\n    background-color: $color-white;\r\n    z-index: 300;\r\n    text-align: center;\r\n    @include button-shadow-static;\r\n    transition: all 0.2s;\r\n\r\n    // Styling on hover and active\r\n    &:hover {\r\n      cursor: pointer;\r\n      @include button-shadow-hover;\r\n    }\r\n    &:active {\r\n      @include button-shadow-active;\r\n      transform: translateY(0.3rem);\r\n    }\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      top: 3.6rem;\r\n      right: 3.6rem;\r\n    }\r\n  }\r\n\r\n  // Styling the initial state of the subsurface navigation background that emerges from behind the nav button\r\n  &__background {\r\n    width: 5.9rem;\r\n    height: 5.9rem;\r\n    top: 6.8rem;\r\n    right: 6.8rem;\r\n    z-index: 100;\r\n    background-image: radial-gradient(\r\n      $color-primary-light,\r\n      $color-primary-dark\r\n    );\r\n    transition: all 0.8s cubic-bezier(0.86, 0, 0.07, 1);\r\n\r\n    // width < 600px\r\n    @include respond-to(phone-big) {\r\n      top: 3.8rem;\r\n      right: 3.8rem;\r\n    }\r\n  }\r\n\r\n  // Styling of the background on a hamburger button click\r\n  &__checkbox:checked ~ &__background {\r\n    transform: scale(80);\r\n  }\r\n\r\n  // Navigation styling when the nav opens\r\n  &__nav {\r\n    height: 100vh;\r\n    // Hide the nav menu when closed\r\n    width: 0%;\r\n    position: fixed;\r\n    top: 0%;\r\n    left: 0%;\r\n    z-index: 200;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n    // background-color: orangered;\r\n  }\r\n\r\n  // When the nav opens, set its width to 100% so the links can emerge from the left to the center of the screen.\r\n  &__checkbox:checked ~ &__nav {\r\n    width: 100%;\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  // Hiding the nav content when closed and setting its initial position to be centered when the nav opens (and sets its width to 100%)\r\n  &__list {\r\n    @include absolute_positioning_center;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  // Styling the list item elements for the nav\r\n  &__item {\r\n    display: block;\r\n    list-style: none;\r\n    margin: 1.2rem;\r\n  }\r\n\r\n  // Styling the initial state of nav links when they emerge from the left side of the screen to the center\r\n  &__link,\r\n  &__link:link,\r\n  &__link:visited {\r\n    font-size: 3.6rem;\r\n    font-weight: 300;\r\n    color: $color-white;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    display: inline-block;\r\n    padding: 0.8rem 2.4rem;\r\n    // Setting up static linear background of two colours for the link animation\r\n    background-image: linear-gradient(\r\n      120deg,\r\n      transparent 0 50%,\r\n      $color-white 50% 100%\r\n    );\r\n    transition: all 0.4s;\r\n    // To make the primary colour cover the entire link element and maintain the stylish angled background animation, setting the background-size with a high value is necessary for the primary colour to overflow the entire element. The white background is pushed out to the right hand side due to the size of the background and its initial position set to 0 on the X and Y axes.\r\n    background-size: 230%;\r\n\r\n    span {\r\n      margin-right: 1.6rem;\r\n    }\r\n\r\n    &:hover,\r\n    &:active {\r\n      // The default background-position value is 0% (0 at the X and 0 at the Y axis). When set to 100%, the X and Y values are at the maximums of their axis values (bottom-right corner of the background/image)\r\n      background-position: 100%;\r\n      color: $color-primary;\r\n      transform: translateX(0.8rem);\r\n    }\r\n\r\n    // width < 500px\r\n    @include respond-to(phone-med) {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n}\r\n"]}