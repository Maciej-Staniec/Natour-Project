/* A cross-browser reset, often referred to as a CSS reset or a CSS normalization, is a technique used to reset or normalize default browser styling to create a consistent starting point for styling elements across different web browsers.

Different browsers have their default styles for various HTML elements. This can lead to inconsistencies in appearance and layout between browsers. A CSS reset aims to neutralize these default styles, removing browser-specific styling differences, and providing a consistent baseline styling for your webpage across different browsers. */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 10px;
  font-size: 62.5%;
}

body {
  padding: 3rem;
  box-sizing: border-box;
}

@keyframes MoveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes MoveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  /* 60% {
    transform:rotate(-20deg)
  } */
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes enlarge {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes MoveInButton {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 1;
  }
}
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6.4rem;
}
.heading-primary--main {
  display: block;
  font-size: 6.2rem;
  letter-spacing: 3.6rem;
  font-weight: 400;
  animation-name: MoveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  letter-spacing: 1.75rem;
  font-weight: 700;
  animation: MoveInRight 1s ease-out;
}

.heading-secondary {
  font-size: 3.6rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s;
}
.heading-secondary:hover {
  transform: skew(15deg, 2deg) scale(1.1);
  text-shadow: 0.5rem 1rem 1rem rgba(0, 0, 0, 0.3);
}

.heading-tertiary {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-weight: 700;
}

.paragraph {
  font-size: 1.6rem;
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-small {
  margin-bottom: 1.6rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4.8rem;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-bottom-extrabig {
  margin-bottom: 9.6rem !important;
}

.btn:link, .btn:visited {
  font-size: 1.6rem;
  padding: 1.6rem 4rem;
  text-decoration: none;
  border: none;
  /* cursor: pointer; */
  border-radius: 10rem;
  text-transform: uppercase;
  display: inline-block;
  transition: all 0.2s ease;
  position: relative;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* We want to see the advanced animation only if we hover over the button */
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}
.btn::after {
  content: "";
  /* We want the pseudo element look exactly the same as the button. Therefore, we want to specify its properties like height and width to be the same. Therefore, we need to set their values to 100% (100% of the parent element). It works, because pseudo element is treated like a child element of the parent element (button).*/
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--white {
  background-color: #fff;
  color: #777;
  /* We also want to specify the colour of the pseudo element to be white, but this needs to be applied to .btn--white class. */
}
.btn--white::after {
  background-color: #fff;
}
.btn--green {
  background-color: #55c57a;
  color: #fff;
  /* We also want to specify the colour of the pseudo element to be green, but this needs to be applied to .btn--green class. */
}
.btn--green::after {
  background-color: #55c57a;
}
.btn--animated {
  animation: MoveInButton 0.5s ease-out 0.75s;
  /* animation fill mode set to backwards applies the 0% animation declaration to our button before the animation happens. Therefore, we don't have to explicitly apply these styles to the button which prevents confusion. */
  animation-fill-mode: backwards;
}

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  text-decoration: none;
  color: #55c57a;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  display: inline-block;
}
.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  transform: translateY(-3px);
  transition: all 0.2s ease;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
}
.btn-text:active {
  transform: translateY(0px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.composition {
  position: relative;
}
.composition__photo {
  width: 55%;
  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: br-normal;
  position: absolute;
  transition: all 0.2s;
}
.composition__photo--p1 {
  top: -2rem;
  left: 0;
}
.composition__photo--p2 {
  right: 0;
  top: 2rem;
}
.composition__photo--p3 {
  top: 10rem;
  left: 20%;
}
.composition__photo:hover {
  z-index: 100;
  transform: scale(1.05) translateY(-0.5rem);
  box-shadow: 0 2.4rem 4rem rgba(0, 0, 0, 0.5);
  outline: #55c57a solid 1.5rem;
  outline-offset: 2rem;
}
.composition:hover .composition__photo:not(:hover) {
  transform: scale(0.95);
}

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.4rem;
  padding: 2.4rem;
  border-radius: br-normal;
  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.16);
  transition: all 0.2s ease-out;
}
.feature-box:hover {
  transform: scale(1.04) translateY(-1.6rem);
}
.feature-box__icon {
  font-size: 6.2rem;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.card {
  perspective: 100rem;
  position: relative;
  height: 52rem;
}
.card__side {
  transition: all 0.5s linear;
  font-size: 3rem;
  height: 52rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  border-radius: 3px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  backface-visibility: hidden;
  overflow: hidden;
}
.card__side--front {
  background-color: #fff;
}
.card__side--back {
  transform: rotateY(-180deg);
}
.card__side--back-1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);
}
.card__side--back-2 {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
}
.card__side--back-3 {
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa);
}
.card:hover .card__side--front {
  transform: rotateY(180deg);
}
.card:hover .card__side--back {
  transform: rotateY(0);
}
.card__picture {
  background-size: cover;
  height: 23rem;
  background-blend-mode: screen;
  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);
  clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0 100%);
}
.card__picture--1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../../img/nat-5.jpg);
}
.card__picture--2 {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../../img/nat-6.jpg);
}
.card__picture--3 {
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../../img/nat-7.jpg);
}
.card__heading {
  font-size: 3rem;
  font-weight: 300;
  text-align: right;
  color: #fff;
  text-transform: uppercase;
  position: absolute;
  top: 12rem;
  right: 2rem;
  width: 75%;
}
.card__heading-span {
  padding: 0.8rem;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
.card__heading-span--1 {
  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));
}
.card__heading-span--2 {
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85));
}
.card__heading-span--3 {
  background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85));
}
.card__details {
  font-size: 1.6rem;
  padding: 3.2rem;
  text-align: center;
}
.card__details ul {
  list-style: none;
  max-width: 80%;
  margin: auto;
}
.card__details li {
  text-decoration: none;
  padding: 0.8rem;
}
.card__details li:not(:last-child) {
  border-bottom: 1px solid #f7f7f7;
}
.card__cta {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  width: 80%;
  text-align: center;
}
.card__cta-only {
  font-size: 1.4rem;
  text-transform: uppercase;
}
.card__cta-value {
  font-size: 6.2rem;
  font-weight: 100;
  margin-bottom: 8rem;
}

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.1);
  padding: 6.4rem;
  border-radius: 3px;
  background-color: rgba(255, 255, 255, 0.6);
  font-size: 1.6rem;
  padding-left: 9.6rem;
  transform: skewX(-12deg);
}
.story:hover .story__caption {
  transform: translate(-50%, -50%);
  opacity: 1;
}
.story > * {
  transform: skewX(12deg);
}
.story__shape {
  width: 15.2rem;
  height: 15.2rem;
  float: left;
  shape-outside: circle(50% at 50% 50%);
  -webkit-clip-path: circle(50% at 50% 50%);
  clip-path: circle(50% at 50% 50%);
  transform: translateX(-3.2rem) skewX(12deg);
  position: relative;
}
.story__img {
  height: 100%;
  transform: translateX(-4rem) scale(1.4);
  backface-visibility: hidden;
  transition: all 0.5s;
}
.story:hover .story__img {
  filter: blur(2px) brightness(0.8);
  transform: translateX(-4rem) scale(1);
}
.story__caption {
  position: absolute;
  top: 50%;
  left: 50%;
  color: #fff;
  z-index: 100;
  transform: translate(-50%, 20%);
  text-align: center;
  text-transform: uppercase;
  opacity: 0;
  transition: all 0.5s;
  backface-visibility: hidden;
}

.bg-video {
  position: absolute;
  top: 0%;
  left: 0%;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.15;
}
.bg-video__content {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.form__input {
  border-style: none;
  height: 3.2rem;
  width: 90%;
  padding: 2.4rem 1.6rem;
  font-family: inherit;
  font-size: 1.6rem;
  color: inherit;
  transition: all 0.3s;
  border-bottom: 3px solid transparent;
}
.form__input::-moz-placeholder {
  color: #c9c9c9;
}
.form__input::placeholder {
  color: #c9c9c9;
}
.form__input:focus {
  outline: none;
}
.form__input:focus:invalid {
  border-bottom: 3px solid #ff7730;
}
.form__input:focus:valid {
  border-bottom: 3px solid #55c57a;
}
.form__input:not(:-moz-placeholder-shown) + .form__label {
  transform: translateY(0);
  opacity: 1;
}
.form__input:not(:placeholder-shown) + .form__label {
  transform: translateY(0);
  opacity: 1;
}
.form__label {
  padding: 0.8rem 1.6rem;
  font-weight: 600;
  font-size: 1.2rem;
  letter-spacing: 1.2px;
  transform: translateY(-4rem);
  transition: all 0.3s;
  display: block;
  opacity: 0;
}
.section-about {
  background-color: #f7f7f7;
  padding: 19.2rem 0;
  margin-top: -20vh;
}

.section-features {
  padding: 19.2rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-5deg);
  margin-top: -7rem;
}
.section-features > * {
  transform: skewY(5deg);
}

.section-tours {
  background-color: #f7f7f7;
  padding: 19.2rem 0 15.2rem 0;
  margin-top: -7rem;
}

.section-stories {
  padding: 15.2rem 0;
  position: relative;
}

.section-book {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
  padding: 19.2rem 0;
}

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0% 50%, transparent 50%), url(../../img/nat-10.jpg);
  background-size: cover;
  height: 48rem;
  border-radius: 3px;
  box-shadow: 0 1.6rem 4rem rgba(0, 0, 0, 0.15);
}
.book__form {
  width: 50%;
  padding: 6.2rem;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/hero.jpg);
  background-size: cover;
  background-position: top;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}
.header__logo-box {
  position: absolute;
  top: 4.4rem;
  left: 4.4rem;
}
.header__logo {
  height: 3.6rem;
  backface-visibility: hidden;
}
.header__logo:hover {
  animation: enlarge 1s ease-in-out;
}
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}
.row:not(:last-child) {
  margin-bottom: 8rem;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row [class^=col-] {
  float: left;
}
.row [class^=col-]:not(:last-child) {
  margin-right: 6.4rem;
}
.row .col-1-of-2 {
  width: calc((100% - 6.4rem) / 2);
}
.row .col-1-of-3 {
  width: calc((100% - 12.8rem) / 3);
}
.row .col-1-of-4 {
  width: calc((100% - 19.2rem) / 4);
}
.row .col-2-of-3 {
  width: calc((100% - 12.8rem) / 3 * 2 + 6.4rem);
}
.row .col-2-of-4 {
  width: calc((100% - 19.2rem) / 4 * 2 + 6.4rem);
}
.row .col-3-of-4 {
  width: calc((100% - 19.2rem) / 4 * 3 + 12.8rem);
}/*# sourceMappingURL=main.css.map */